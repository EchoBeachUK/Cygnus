; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; .______        ___      .__   __.  __  ___       __
; |   _  \      /   \     |  \ |  | |  |/  /      / /
; |  |_)  |    /  ^  \    |   \|  | |  '  /      / /_
; |   _  <    /  /_\  \   |  . `  | |    <      | '_ \
; |  |_)  |  /  _____  \  |  |\   | |  .  \     | (_) |
; |______/  /__/     \__\ |__| \__| |__|\__\     \___/



                        org 49152                       ; Build the code to run at $C000
                        dispto zeuspage(6)              ; But displace it so it goes in memory at $14000
                    ;   dispto $28000
Addrs6:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Planet landing screen data
PLANET_LANDING_SCREEN_1_6:;4096 BYTES                   ;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 192, 3, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 224, 14, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 128, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 224, 27, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 128, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 201, 224, 49, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 192, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 192, 96, 39, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 192, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 168, 112, 103, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 192, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 36, 240, 71, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 192, 0, 0;
                        DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 164, 240, 7, 216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 224, 0, 0;
                        DB 60, 0, 0, 0, 0, 0, 0, 0, 0, 1, 53, 248, 231, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 224, 0, 1;
                        DB 19, 0, 0, 0, 0, 0, 0, 0, 0, 1, 52, 248, 167, 244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 224, 0, 3;
                        DB 83, 128, 0, 0, 0, 0, 0, 0, 0, 1, 180, 248, 103, 244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 224, 0, 1;
                        DB 51, 128, 0, 0, 0, 0, 0, 0, 0, 1, 180, 248, 199, 250, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 224, 0, 1;
                        DB 35, 128, 0, 0, 0, 0, 0, 0, 0, 1, 180, 252, 231, 250, 0, 0, 0, 0, 244, 0, 0, 0, 0, 3, 192, 0, 0, 0, 164, 240, 0, 2;
                        DB 111, 128, 7, 0, 0, 0, 0, 0, 0, 1, 184, 252, 231, 121, 0, 0, 0, 1, 247, 0, 0, 0, 0, 2, 112, 0, 0, 0, 164, 240, 0, 3;
                        DB 103, 128, 15, 128, 0, 0, 0, 0, 0, 1, 188, 220, 71, 253, 0, 0, 0, 1, 253, 0, 0, 0, 0, 7, 16, 0, 0, 1, 165, 240, 0, 3;
                        DB 103, 128, 23, 128, 0, 0, 0, 0, 0, 3, 184, 222, 69, 255, 128, 0, 0, 1, 181, 0, 0, 0, 0, 7, 208, 0, 0, 1, 37, 112, 0, 2;
                        DB 175, 192, 19, 128, 0, 0, 0, 0, 0, 3, 180, 223, 197, 127, 128, 0, 0, 3, 189, 0, 0, 0, 0, 7, 240, 0, 0, 1, 71, 120, 0, 2;
                        DB 167, 192, 19, 128, 0, 0, 0, 0, 0, 2, 164, 223, 197, 95, 96, 0, 0, 3, 181, 0, 0, 0, 1, 143, 80, 0, 0, 1, 207, 120, 0, 3;
                        DB 167, 192, 19, 192, 0, 0, 0, 0, 0, 2, 160, 223, 231, 255, 48, 0, 0, 3, 183, 128, 0, 0, 1, 139, 176, 0, 0, 1, 79, 120, 0, 3;
                        DB 167, 192, 19, 192, 0, 0, 0, 0, 0, 3, 162, 223, 167, 127, 176, 0, 0, 1, 183, 128, 0, 0, 1, 159, 108, 0, 0, 1, 79, 124, 0, 0;
                        DB 167, 224, 43, 192, 0, 0, 0, 0, 0, 3, 178, 223, 231, 126, 188, 0, 0, 1, 231, 128, 0, 0, 3, 212, 68, 0, 0, 3, 231, 124, 0, 4;
                        DB 199, 224, 19, 192, 0, 0, 0, 0, 0, 7, 179, 111, 199, 127, 254, 0, 0, 3, 119, 192, 0, 0, 7, 116, 68, 0, 0, 2, 183, 254, 0, 5;
                        DB 230, 224, 19, 224, 0, 0, 0, 0, 0, 3, 209, 103, 195, 255, 182, 0, 0, 3, 242, 112, 0, 0, 5, 125, 50, 0, 0, 2, 87, 191, 0, 7;
                        DB 198, 224, 59, 224, 0, 0, 0, 0, 0, 3, 229, 119, 194, 255, 15, 0, 0, 7, 111, 40, 0, 0, 5, 85, 46, 0, 0, 2, 79, 255, 0, 4;
                        DB 166, 224, 19, 240, 0, 0, 0, 0, 0, 3, 164, 119, 194, 255, 205, 128, 0, 7, 111, 222, 0, 0, 13, 127, 110, 0, 0, 5, 159, 191, 128, 4;
                        DB 38, 240, 24, 248, 0, 0, 0, 0, 0, 6, 191, 103, 194, 255, 197, 128, 0, 7, 215, 223, 0, 0, 5, 255, 247, 128, 0, 4, 247, 191, 128, 8;
                        DB 6, 240, 47, 248, 0, 0, 0, 0, 0, 6, 62, 127, 194, 215, 192, 192, 0, 3, 240, 1, 0, 0, 26, 215, 152, 192, 0, 15, 240, 191, 128, 48;
                        DB 22, 240, 11, 252, 0, 0, 0, 0, 0, 10, 190, 127, 194, 91, 240, 224, 6, 3, 188, 179, 128, 0, 27, 247, 182, 255, 248, 8, 55, 159, 193, 16;
                        DB 150, 240, 11, 252, 0, 0, 0, 0, 0, 14, 182, 123, 230, 79, 252, 112, 7, 231, 224, 51, 192, 0, 191, 255, 231, 253, 95, 253, 183, 207, 225, 30;
                        DB 155, 112, 43, 252, 0, 0, 0, 0, 0, 29, 185, 127, 252, 111, 254, 120, 127, 191, 181, 245, 96, 1, 231, 113, 227, 250, 186, 175, 167, 255, 248, 255;
                        DB 139, 48, 31, 222, 0, 0, 0, 0, 15, 252, 175, 95, 240, 35, 255, 223, 183, 125, 185, 223, 252, 3, 197, 251, 2, 221, 217, 88, 159, 255, 255, 244;
                        DB 43, 176, 23, 222, 0, 0, 0, 0, 58, 184, 63, 243, 248, 2, 255, 190, 190, 170, 255, 247, 52, 3, 27, 147, 247, 174, 246, 176, 94, 239, 255, 244;
                        DB 35, 184, 23, 207, 0, 0, 0, 9, 245, 95, 27, 254, 253, 129, 191, 245, 117, 125, 127, 231, 243, 31, 91, 218, 103, 215, 236, 24, 126, 239, 255, 252;
                        DB 251, 56, 23, 207, 128, 0, 0, 127, 170, 191, 5, 255, 127, 193, 159, 254, 171, 250, 215, 190, 237, 255, 23, 220, 103, 251, 252, 184, 111, 127, 255, 254;
                        DB 243, 252, 22, 239, 128, 0, 1, 213, 85, 127, 3, 191, 129, 227, 195, 245, 85, 117, 127, 252, 255, 188, 155, 28, 125, 123, 116, 96, 79, 119, 255, 250;
                        DB 243, 252, 18, 255, 192, 0, 31, 170, 238, 255, 0, 255, 231, 227, 248, 254, 170, 186, 191, 127, 221, 232, 20, 9, 110, 191, 234, 192, 52, 191, 255, 254;
                        DB 179, 223, 50, 127, 224, 7, 245, 85, 117, 114, 0, 119, 243, 240, 62, 125, 85, 87, 87, 22, 132, 32, 50, 11, 117, 127, 225, 128, 12, 143, 239, 255;
                        DB 203, 255, 227, 126, 252, 255, 170, 170, 171, 179, 0, 247, 252, 255, 191, 241, 171, 186, 171, 127, 245, 192, 239, 255, 234, 167, 187, 3, 159, 165, 255, 255;
                        DB 122, 255, 129, 31, 255, 253, 213, 85, 85, 240, 0, 31, 206, 255, 239, 127, 253, 213, 86, 251, 225, 243, 95, 255, 213, 69, 117, 239, 252, 135, 191, 255;
                        DB 255, 127, 192, 23, 189, 245, 170, 170, 187, 184, 6, 127, 249, 62, 103, 143, 246, 186, 191, 254, 120, 244, 43, 254, 170, 3, 171, 185, 248, 142, 171, 255;
                        DB 223, 255, 236, 13, 191, 171, 213, 117, 85, 240, 7, 119, 127, 158, 17, 243, 255, 87, 94, 254, 112, 55, 27, 253, 89, 87, 251, 128, 76, 0, 135, 191;
                        DB 47, 207, 254, 12, 231, 245, 42, 186, 186, 249, 16, 3, 255, 227, 104, 255, 15, 234, 171, 255, 251, 215, 207, 234, 186, 169, 127, 231, 34, 226, 239, 255;
                        DB 29, 255, 239, 30, 31, 170, 245, 87, 85, 249, 16, 3, 255, 253, 164, 253, 227, 253, 93, 183, 127, 239, 117, 213, 87, 117, 187, 238, 0, 64, 6, 127;
                        DB 7, 247, 255, 31, 199, 245, 42, 171, 170, 152, 19, 15, 255, 255, 252, 127, 248, 255, 235, 35, 221, 231, 96, 235, 174, 240, 255, 254, 248, 136, 136, 255;
                        DB 3, 191, 255, 129, 243, 234, 221, 93, 95, 249, 34, 7, 162, 127, 255, 255, 255, 1, 223, 252, 247, 247, 233, 213, 85, 85, 55, 223, 188, 33, 97, 255;
                        DB 7, 185, 255, 253, 255, 141, 58, 174, 171, 177, 198, 39, 255, 199, 207, 254, 223, 253, 248, 0, 52, 13, 123, 170, 170, 170, 151, 254, 254, 51, 162, 63;
                        DB 0, 254, 119, 255, 123, 255, 245, 95, 85, 88, 238, 55, 199, 255, 28, 255, 255, 255, 238, 0, 12, 1, 159, 85, 85, 85, 91, 221, 86, 120, 12, 115;
                        DB 51, 255, 249, 243, 60, 127, 170, 171, 250, 248, 6, 123, 254, 63, 254, 47, 255, 236, 16, 0, 4, 16, 250, 187, 234, 186, 175, 238, 174, 248, 191, 255;
                        DB 59, 187, 191, 240, 143, 159, 213, 215, 55, 96, 32, 47, 255, 255, 255, 195, 213, 94, 3, 255, 255, 255, 213, 93, 213, 117, 85, 127, 87, 0, 45, 255;
                        DB 128, 31, 191, 27, 71, 248, 42, 187, 254, 248, 0, 48, 119, 239, 255, 248, 170, 171, 255, 186, 170, 174, 170, 170, 234, 175, 170, 63, 171, 251, 160, 207;
                        DB 128, 31, 247, 237, 39, 239, 85, 85, 95, 254, 244, 48, 7, 31, 240, 67, 255, 253, 213, 85, 85, 85, 85, 85, 85, 87, 85, 61, 213, 223, 162, 87;
                        DB 152, 127, 243, 255, 227, 255, 170, 170, 255, 116, 240, 128, 60, 224, 255, 250, 170, 170, 170, 170, 170, 170, 170, 174, 170, 170, 170, 154, 170, 175, 192, 29;
                        DB 16, 61, 18, 127, 255, 255, 213, 85, 85, 222, 160, 244, 96, 103, 5, 237, 85, 85, 85, 85, 85, 85, 85, 125, 85, 85, 85, 88, 85, 85, 159, 240;
                        DB 49, 63, 254, 46, 127, 246, 170, 190, 254, 174, 255, 247, 128, 1, 120, 190, 170, 170, 254, 170, 170, 170, 190, 214, 170, 170, 170, 172, 42, 175, 155, 0;
                        DB 113, 190, 63, 224, 231, 255, 253, 125, 215, 127, 254, 1, 0, 0, 8, 53, 213, 85, 117, 85, 85, 85, 95, 125, 85, 85, 215, 87, 213, 87, 80, 0;
                        DB 51, 223, 241, 255, 241, 127, 255, 255, 255, 254, 8, 0, 32, 0, 8, 47, 250, 187, 250, 170, 170, 171, 239, 218, 170, 175, 254, 255, 251, 175, 112, 0;
                        DB 1, 127, 255, 255, 254, 30, 247, 248, 190, 194, 1, 128, 0, 0, 0, 17, 63, 223, 255, 245, 247, 222, 255, 237, 93, 254, 255, 227, 255, 255, 224, 0;
                        DB 191, 255, 171, 252, 127, 232, 164, 96, 16, 192, 0, 0, 0, 0, 0, 0, 71, 255, 251, 255, 255, 255, 255, 195, 255, 227, 196, 32, 0, 91, 96, 0;
                        DB 215, 250, 255, 192, 19, 96, 192, 0, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 1, 87, 219, 124, 7, 255, 250, 15, 255, 248, 0, 32, 1;
                        DB 255, 255, 192, 0, 1, 0, 0, 0, 3, 240, 0, 3, 252, 0, 16, 224, 0, 4, 0, 1, 8, 0, 3, 248, 0, 71, 16, 0, 7, 224, 32, 129;
                        DB 167, 115, 192, 0, 128, 0, 0, 63, 252, 31, 253, 252, 3, 255, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 248, 0, 0, 0, 0;
                        DB 255, 252, 255, 231, 166, 64, 76, 12, 0, 52, 127, 255, 192, 112, 255, 255, 255, 255, 255, 243, 255, 248, 127, 255, 255, 255, 240, 7, 255, 0, 7, 249;
                        DB 255, 255, 255, 229, 22, 144, 56, 64, 3, 178, 127, 255, 255, 255, 127, 255, 255, 255, 255, 227, 255, 255, 255, 255, 128, 0, 127, 255, 254, 63, 255, 227;
                        DB 255, 255, 255, 231, 218, 88, 82, 6, 0, 145, 63, 255, 255, 255, 255, 252, 15, 254, 0, 63, 247, 254, 153, 1, 48, 48, 0, 255, 255, 255, 255, 225;
                        DB 255, 255, 255, 255, 255, 16, 7, 0, 21, 223, 255, 255, 255, 252, 127, 255, 240, 3, 255, 192, 7, 245, 254, 64, 225, 31, 255, 255, 255, 255, 255, 254;
                        DB 249, 255, 255, 255, 254, 63, 255, 255, 128, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 233, 97, 0, 0, 63, 255, 255, 255, 255, 224;
                        DB 249, 255, 255, 247, 224, 143, 128, 0, 241, 63, 255, 159, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 240, 0, 0, 1, 127, 255, 255, 255, 248;
                        DB 131, 255, 255, 225, 198, 192, 1, 254, 28, 255, 255, 60, 255, 255, 255, 255, 252, 255, 254, 255, 255, 255, 255, 224, 127, 255, 248, 7, 255, 255, 255, 250;
                        DB 192, 159, 255, 224, 28, 0, 25, 255, 196, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 239, 227, 254, 0, 248, 0, 15, 159, 255, 255, 255, 250;
                        DB 205, 131, 255, 225, 120, 0, 113, 255, 242, 47, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 191, 220, 108, 0, 1, 225, 195, 255, 255, 255, 248;
                        DB 197, 224, 1, 226, 240, 0, 64, 55, 250, 191, 255, 159, 255, 233, 255, 255, 3, 0, 127, 31, 255, 191, 1, 192, 0, 110, 252, 76, 255, 255, 255, 250;
                        DB 203, 192, 8, 254, 184, 1, 243, 247, 242, 191, 255, 255, 249, 71, 254, 14, 31, 254, 255, 255, 255, 254, 21, 128, 2, 23, 255, 50, 255, 255, 255, 249;
                        DB 31, 0, 4, 248, 60, 0, 6, 159, 228, 127, 255, 157, 251, 255, 214, 20, 136, 0, 63, 199, 255, 232, 45, 0, 7, 3, 127, 186, 255, 255, 255, 252;
                        DB 0, 0, 30, 31, 103, 0, 0, 159, 9, 191, 255, 133, 255, 255, 192, 0, 3, 243, 143, 255, 255, 129, 232, 128, 0, 9, 127, 58, 255, 255, 255, 249;
                        DB 254, 64, 48, 63, 7, 193, 24, 128, 224, 127, 255, 255, 255, 255, 143, 255, 255, 255, 225, 255, 255, 131, 130, 0, 1, 3, 254, 100, 255, 255, 255, 252;
                        DB 31, 249, 6, 31, 194, 252, 0, 63, 131, 239, 255, 255, 253, 248, 35, 224, 0, 0, 124, 255, 255, 131, 246, 16, 193, 129, 240, 153, 255, 255, 255, 240;
                        DB 95, 255, 251, 124, 50, 31, 255, 192, 15, 255, 250, 31, 248, 113, 176, 0, 5, 254, 14, 63, 255, 129, 240, 76, 0, 3, 15, 131, 255, 255, 255, 56;
                        DB 255, 255, 255, 240, 108, 6, 254, 0, 127, 255, 127, 193, 248, 7, 0, 0, 57, 159, 196, 29, 126, 7, 252, 35, 192, 12, 248, 30, 252, 255, 255, 185;
                        DB 255, 251, 255, 225, 251, 240, 3, 72, 223, 249, 223, 224, 8, 94, 0, 0, 95, 255, 243, 5, 187, 185, 195, 33, 255, 225, 0, 63, 255, 255, 255, 226;
                        DB 255, 255, 255, 225, 250, 126, 48, 0, 243, 255, 63, 255, 56, 188, 0, 1, 140, 119, 249, 231, 89, 129, 6, 192, 47, 240, 0, 252, 0, 124, 252, 254;
                        DB 255, 255, 128, 255, 255, 255, 251, 251, 23, 39, 128, 10, 15, 174, 0, 0, 36, 15, 243, 168, 64, 7, 239, 195, 0, 3, 65, 128, 7, 255, 255, 1;
                        DB 248, 0, 62, 3, 248, 247, 255, 254, 219, 187, 0, 0, 206, 15, 0, 0, 31, 223, 231, 12, 0, 7, 233, 249, 252, 1, 64, 1, 252, 0, 255, 193;
                        DB 195, 255, 255, 252, 0, 255, 254, 144, 7, 215, 0, 0, 15, 217, 192, 0, 4, 63, 28, 8, 8, 8, 128, 0, 15, 163, 179, 192, 191, 0, 28, 202;
                        DB 63, 248, 0, 1, 228, 62, 124, 128, 28, 158, 0, 8, 7, 193, 240, 70, 32, 0, 249, 127, 35, 12, 64, 0, 8, 12, 16, 64, 13, 238, 233, 138;
                        DB 240, 3, 255, 252, 15, 204, 8, 64, 13, 224, 17, 32, 55, 240, 191, 0, 0, 63, 193, 255, 255, 12, 32, 0, 88, 0, 8, 2, 9, 95, 198, 204;
                        DB 71, 255, 255, 255, 227, 241, 64, 64, 10, 63, 247, 4, 31, 12, 135, 255, 133, 193, 3, 127, 250, 30, 0, 0, 8, 32, 160, 128, 15, 186, 248, 61;
                        DB 15, 255, 255, 255, 252, 14, 0, 18, 243, 250, 243, 254, 188, 27, 1, 191, 192, 0, 25, 247, 244, 208, 0, 5, 162, 12, 161, 35, 244, 153, 8, 60;
                        DB 207, 255, 0, 1, 255, 225, 192, 31, 192, 0, 15, 255, 136, 126, 252, 0, 210, 52, 19, 222, 188, 173, 97, 131, 211, 32, 38, 6, 0, 26, 40, 16;
                        DB 60, 0, 4, 0, 31, 252, 112, 19, 159, 255, 110, 255, 160, 126, 159, 140, 0, 20, 3, 255, 15, 243, 255, 130, 139, 72, 28, 32, 1, 217, 60, 160;
                        DB 224, 28, 32, 1, 67, 255, 56, 0, 63, 192, 0, 255, 217, 3, 252, 224, 0, 0, 0, 15, 224, 16, 255, 195, 237, 44, 41, 3, 0, 72, 152, 48;
                        DB 192, 15, 160, 129, 92, 255, 218, 0, 4, 52, 96, 135, 255, 255, 252, 4, 0, 0, 1, 7, 253, 209, 98, 255, 255, 136, 3, 254, 0, 43, 168, 48;
                        DB 128, 14, 128, 128, 59, 127, 28, 0, 3, 46, 26, 248, 127, 255, 252, 22, 0, 0, 0, 32, 63, 208, 128, 255, 255, 31, 255, 255, 255, 224, 160, 224;
                        DB 0, 2, 160, 2, 23, 127, 56, 0, 4, 208, 47, 223, 191, 127, 252, 2, 3, 0, 0, 0, 1, 255, 225, 91, 240, 71, 192, 0, 1, 254, 1, 192;
                        DB 128, 0, 32, 242, 0, 126, 112, 0, 0, 2, 127, 136, 206, 127, 236, 4, 2, 8, 0, 8, 10, 47, 225, 48, 227, 96, 0, 11, 252, 60, 64, 192;
                        DB 0, 0, 96, 128, 0, 249, 192, 0, 0, 0, 0, 0, 0, 28, 40, 0, 0, 120, 0, 8, 0, 0, 203, 96, 14, 0, 0, 115, 63, 137, 128, 0;
                        DB 128, 0, 0, 0, 17, 247, 72, 15, 192, 56, 42, 15, 209, 46, 0, 208, 0, 64, 11, 171, 95, 66, 127, 224, 188, 0, 0, 191, 63, 230, 76, 0;
                        DB 224, 8, 0, 0, 7, 0, 64, 0, 127, 0, 4, 27, 222, 176, 20, 127, 16, 35, 4, 45, 206, 0, 19, 225, 120, 0, 0, 24, 15, 247, 80, 0;
                        DB 120, 0, 0, 0, 12, 0, 192, 196, 5, 0, 0, 61, 215, 136, 28, 89, 227, 249, 2, 83, 248, 0, 0, 31, 92, 0, 0, 72, 15, 231, 64, 0;
                        DB 63, 129, 128, 0, 124, 3, 143, 240, 0, 0, 0, 35, 141, 206, 29, 109, 35, 248, 0, 219, 213, 64, 128, 44, 30, 0, 0, 24, 63, 204, 128, 0;
                        DB 6, 192, 0, 3, 192, 62, 48, 0, 0, 0, 0, 25, 197, 200, 27, 124, 19, 122, 0, 202, 65, 128, 10, 31, 179, 128, 0, 8, 62, 19, 0, 0;
                        DB 136, 63, 255, 255, 129, 227, 255, 1, 0, 0, 0, 1, 176, 66, 13, 99, 1, 94, 65, 128, 1, 99, 176, 63, 131, 224, 140, 64, 1, 240, 0, 0;
                        DB 163, 128, 0, 0, 31, 126, 2, 48, 60, 0, 0, 0, 9, 0, 78, 163, 161, 13, 0, 136, 100, 0, 0, 31, 225, 126, 0, 0, 127, 0, 0, 0;
                        DB 240, 255, 252, 7, 224, 0, 0, 126, 14, 0, 0, 0, 0, 0, 13, 100, 132, 28, 0, 16, 136, 72, 0, 62, 25, 15, 255, 11, 128, 0, 0, 0;
                        DB 254, 0, 3, 248, 0, 1, 128, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 9, 0, 24, 128, 128, 0, 8, 54, 3, 127, 128, 0, 0, 0, 0;
                        DB 255, 253, 238, 8, 40, 4, 224, 12, 0, 0, 0, 0, 0, 0, 16, 16, 0, 0, 0, 16, 17, 224, 96, 0, 253, 248, 1, 164, 104, 0, 0, 0;
                        DB 255, 253, 238, 16, 12, 12, 224, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 64, 253, 63, 24, 0, 40, 0, 0, 0;
                        DB 254, 249, 250, 0, 16, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 8, 3, 252, 63, 28, 224, 8, 0, 24, 0;
                        DB 125, 249, 202, 0, 64, 7, 8, 0, 65, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 144, 16, 1, 96, 113, 25, 32, 144, 200, 40, 0;
                        DB 28, 118, 192, 0, 40, 1, 20, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 136, 152, 2, 0, 8, 2, 1, 16, 0, 8, 12;
                        DB 56, 99, 132, 176, 95, 8, 133, 0, 51, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 70, 68, 72, 0, 32, 16, 58, 176, 8, 136;
                        DB 16, 192, 8, 16, 139, 8, 0, 1, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 96, 1, 96, 0, 72, 2, 112, 128, 4, 128;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Logo graphics data
; LOGO_GRAPHIC_DATA:

;                        DB 15, 255, 135, 128, 60, 63, 255, 159, 255, 195, 192, 30, 31, 255, 192, 0, 0, 254, 3, 192, 3, 255, 248, 120, 3, 192, 63, 128;
;                        DB 31, 255, 199, 128, 60, 127, 255, 31, 255, 227, 192, 30, 63, 255, 128, 0, 0, 254, 3, 192, 3, 255, 252, 120, 3, 192, 63, 128;
;                        DB 63, 255, 231, 128, 60, 255, 254, 31, 255, 243, 192, 30, 127, 255, 6, 0, 1, 255, 3, 192, 3, 255, 254, 120, 3, 192, 127, 192;
;                        DB 62, 1, 231, 128, 60, 248, 0, 30, 1, 243, 192, 30, 124, 0, 15, 0, 1, 255, 3, 192, 3, 192, 62, 120, 3, 192, 127, 192;
;                        DB 60, 0, 231, 128, 60, 240, 0, 30, 0, 243, 192, 30, 120, 0, 15, 0, 3, 255, 131, 192, 3, 192, 30, 120, 3, 192, 255, 224;
;                        DB 60, 0, 231, 128, 60, 240, 0, 30, 0, 243, 192, 30, 120, 0, 6, 0, 3, 231, 131, 192, 3, 192, 30, 120, 3, 192, 249, 224;
;                        DB 60, 0, 7, 128, 60, 240, 0, 30, 0, 243, 192, 30, 124, 0, 0, 0, 3, 231, 131, 192, 3, 192, 30, 120, 3, 192, 249, 224;
;                        DB 60, 0, 7, 128, 60, 240, 0, 30, 0, 243, 192, 30, 127, 255, 0, 0, 7, 195, 195, 192, 3, 192, 30, 121, 255, 193, 240, 240;
;                        DB 60, 0, 7, 255, 252, 243, 254, 30, 0, 243, 192, 30, 63, 255, 128, 0, 7, 195, 195, 192, 3, 192, 62, 123, 255, 193, 240, 240;
;                        DB 60, 0, 3, 255, 248, 241, 255, 30, 0, 243, 192, 30, 31, 255, 192, 0, 15, 131, 227, 192, 3, 199, 254, 127, 251, 195, 224, 248;
;                        DB 60, 0, 225, 255, 240, 240, 255, 158, 0, 243, 192, 30, 0, 7, 192, 0, 15, 129, 227, 192, 3, 207, 252, 127, 243, 195, 224, 120;
;                        DB 60, 0, 224, 31, 0, 240, 7, 158, 0, 243, 192, 30, 0, 3, 192, 0, 15, 1, 227, 192, 3, 223, 248, 120, 3, 195, 192, 120;
;                        DB 62, 1, 224, 31, 0, 248, 7, 158, 0, 243, 192, 30, 0, 7, 198, 0, 31, 0, 243, 192, 3, 192, 0, 120, 3, 199, 192, 60;
;                        DB 63, 255, 224, 31, 0, 255, 255, 158, 0, 243, 255, 254, 127, 255, 207, 0, 31, 254, 243, 255, 251, 192, 0, 120, 3, 199, 255, 188;
;                        DB 31, 255, 192, 31, 0, 127, 255, 30, 0, 241, 255, 254, 127, 255, 143, 0, 63, 252, 123, 255, 243, 192, 0, 120, 3, 207, 255, 30;
;                        DB 15, 255, 128, 31, 0, 63, 254, 30, 0, 240, 255, 254, 127, 255, 6, 0, 63, 248, 123, 255, 227, 192, 0, 120, 3, 207, 254, 30;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DRAW_RING_COUNT_6:      DB 0                            ; Used to count ring frame
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DRAW_RING_6:

                        LD HL,DRAW_RING_COUNT_6         ; Get ring frame counter
                        INC (HL)                        ; Add one to ring counter
                        LD A,(DRAW_RING_COUNT_6)        ; Get ring frame counter for testing
                        CP 3                            ; Is it 3?
                        JR C,SKIP_RESET_RING_FRAME_6    ;  If not then jump resetting it

                        LD (HL),0                       ; Reset counter
                        LD DE,SPHERE_DATA1_6            ; Set frame to 1
                        JP RING_LOOP1_6                 ;
SKIP_RESET_RING_FRAME_6:
                        ;  OR A                            ; Is it 0?
                        ;  JR NZ,SKIP_SETTING_RING_FRAME_1 ; If not then skip Setting frame to 1
SKIP_RESET_RING_FRAME2_6:
                        ;  LD DE,SPHERE_DATA1              ; Set frame to 1
                        ;  JP RING_LOOP1                   ; Jump to draw circles
SKIP_SETTING_RING_FRAME_1_6:
                        CP 1                            ; Is it 1?
                        JR NZ,SKIP_SETTING_RING_FRAME_2_6 ; If not then skip Setting frame to 2
                        LD DE,SPHERE_DATA3_6            ; Set frame to 2
                        JP RING_LOOP1_6                 ; Jump to draw circles
SKIP_SETTING_RING_FRAME_2_6:

                        LD DE,SPHERE_DATA2_6            ; Set frame to 3
; Draw rings                           ;
RING_LOOP1_6:
                        LD B,75                         ;

                        LD A,(DE)                       ;
                        SUB B                           ;
                        LD B,A                          ;
                        INC DE                          ;
                        LD C,40                         ;

                        LD A,(DE)                       ;
                        ADD A,C                         ;
                        LD C,A                          ;
                        INC DE                          ;

                        PUSH DE                         ;

                        LD A,2                          ;

RING_LOOPA_6:
                        PUSH AF                         ;
                        PUSH BC                         ;
                        CALL PLOT                       ;
                        POP BC                          ;
                        INC C                           ;
                        PUSH BC                         ;
                        CALL PLOT                       ;
                        POP BC                          ;
                        INC B                           ;
                        PUSH BC                         ;
                        CALL PLOT                       ;
                        POP BC                          ;
                        DEC C                           ;
                        PUSH BC                         ;
                        CALL PLOT                       ;
                        POP BC                          ;
                        INC C                           ;
                        DEC B                           ;
                        POP AF                          ;
                        DEC A                           ;
                        JR NZ,RING_LOOPA_6              ;
                        POP DE                          ;
                        LD A,(DE)                       ;
                        CP 255                          ; End of ring data?
                        JR Z,UPDATE_RING_COUNT_6        ; If so then all dots are done
                        JP RING_LOOP1_6                 ; Jump back to complete all dots

UPDATE_RING_COUNT_6:
                        ;  LD A,(DRAW_RING_COUNT)          ; Get ring frame counter
                        ;  INC A                           ;
                        ;  CP 3                            ;
                        ;  JR C,SKIP_RESET_RING_COUNT      ;
                        ;  XOR A                           ;
SKIP_RESET_RING_COUNT_6:
                        ; LD (DRAW_RING_COUNT),A          ;
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SPHERE_DATA1_6:         ;Sphere frame 1                 ;
                        DEFB 128,87,126,87,128,87,126,87;
                        DEFB 134,87,121,87,134,87,121,87 ;
                        DEFB 132,92,122,92,132,82,122,82 ;
                        DEFB 127,93,127,93,127,81,127,81 ;
                        DEFB 142,87,112,87,142,87,112,87 ;
                        DEFB 141,92,113,92,141,82,113,82 ;
                        DEFB 138,96,116,96,138,78,116,78 ;
                        DEFB 135,100,119,100,135,74,119,74 ;
                        DEFB 130,101,124,101,130,73,124,73 ;
                        DEFB 154,87,100,87,154,87,100,87 ;
                        DEFB 154,92,100,92,154,82,100,82 ;
                        DEFB 152,97,102,97,152,77,102,77 ;
                        DEFB 150,101,104,101,150,73,104,73 ;
                        DEFB 147,105,107,105,147,69,107,69 ;
                        DEFB 143,109,111,109,143,65,111,65 ;
                        DEFB 139,111,115,111,139,63,115,63 ;
                        DEFB 135,113,119,113,135,61,119,61 ;
                        DEFB 130,114,124,114,130,60,124,60 ;
                        DEFB 173,87,81,87,173,87,81,87  ;
                        DEFB 172,92,82,92,172,82,82,82  ;
                        DEFB 172,97,82,97,172,77,82,77  ;
                        DEFB 170,102,84,102,170,72,84,72 ;
                        DEFB 168,106,86,106,168,68,86,68 ;
                        DEFB 166,111,88,111,166,63,88,63 ;
                        DEFB 163,115,91,115,163,59,91,59 ;
                        DEFB 160,119,94,119,160,55,94,55 ;
                        DEFB 156,122,98,122,156,52,98,52 ;
                        DEFB 152,125,102,125,152,49,102,49 ;
                        DEFB 148,128,106,128,148,46,106,46 ;
                        DEFB 143,130,111,130,143,44,111,44 ;
                        DEFB 139,131,115,131,139,43,115,43 ;
                        DEFB 134,132,120,132,134,42,120,42 ;
                        DEFB 129,133,125,133,129,41,125,41 ;
                        DEFB 201,87,53,87,201,87,53,87  ;
                        DEFB 200,92,54,92,200,82,54,82  ;
                        DEFB 200,97,54,97,200,77,54,77  ;
                        DEFB 199,102,55,102,199,72,55,72 ;
                        DEFB 198,107,56,107,198,67,56,67 ;
                        DEFB 196,112,58,112,196,62,58,62 ;
                        DEFB 194,116,60,116,194,58,60,58 ;
                        DEFB 255                        ; END OF DATA FLAG
                        ;      DEFB 192,121,62,121,192,53,62,53 ;
                        ;      DEFB 190,125,64,125,190,49,64,49 ;
                        ;      DEFB 187,129,67,129,187,45,67,45 ;
                        ;      DEFB 184,133,70,133,184,41,70,41 ;
                        ;      DEFB 181,137,73,137,181,37,73,37 ;
                        ;     DEFB 255                        ; END OF DATA FLAG



SPHERE_DATA2_6:         ;Sphere frame 2                 ;

                        DEFB 135,87,120,87,135,87,120,87;
                        DEFB 133,92,121,92,133,82,121,82;
                        DEFB 129,94,125,94,129,80,125,80;
                        DEFB 150,87,104,87,150,87,104,87;
                        DEFB 150,92,104,92,150,82,104,82;
                        DEFB 148,97,106,97,148,77,106,77;
                        DEFB 146,101,108,101,146,73,108,73;
                        DEFB 142,105,112,105,142,69,112,69;
                        DEFB 138,107,116,107,138,67,116,67;
                        DEFB 133,109,121,109,133,65,121,65;
                        DEFB 129,110,125,110,129,64,125,64;
                        DEFB 168,87,86,87,168,87,86,87  ;
                        DEFB 167,92,87,92,167,82,87,82  ;
                        DEFB 166,97,88,97,166,77,88,77  ;
                        DEFB 165,102,89,102,165,72,89,72;
                        DEFB 163,106,91,106,163,68,91,68;
                        DEFB 160,110,94,110,160,64,94,64;
                        DEFB 157,114,97,114,157,60,97,60;
                        DEFB 153,118,101,118,153,56,101,56;
                        DEFB 149,121,105,121,149,53,105,53;
                        DEFB 145,123,109,123,145,51,109,51;
                        DEFB 140,125,114,125,140,49,114,49;
                        DEFB 136,127,118,127,136,47,118,47;
                        DEFB 131,127,123,127,131,47,123,47;
                        DEFB 187,87,67,87,187,87,67,87  ;
                        DEFB 186,92,68,92,186,82,68,82  ;
                        DEFB 186,97,68,97,186,77,68,77  ;
                        DEFB 185,102,69,102,185,72,69,72;
                        DEFB 183,107,71,107,183,67,71,67;
                        DEFB 181,111,73,111,181,63,73,63;
                        DEFB 179,116,75,116,179,58,75,58;
                        DEFB 177,120,77,120,177,54,77,54;
                        DEFB 174,124,80,124,174,50,80,50;
                        DEFB 170,128,84,128,170,46,84,46;
                        DEFB 167,131,87,131,167,43,87,43;
                        DEFB 163,135,91,135,163,39,91,39;
                        DEFB 159,137,95,137,159,37,95,37;
                        DEFB 155,140,99,140,155,34,99,34;
                        DEFB 150,142,104,142,150,32,104,32;
                        DEFB 145,144,109,144,145,30,109,30;
                        DEFB 141,145,113,145,141,29,113,29;
                        DEFB 136,146,118,146,136,28,118,28;
                        DEFB 131,147,123,147,131,27,123,27;
                        DEFB 255                        ; END OF DATA FLAG


SPHERE_DATA3_6:         ;Sphere frame 3                 ;

                        DEFB 142,87,112,87,142,87,112,87;
                        DEFB 141,92,113,92,141,82,113,82;
                        DEFB 139,96,115,96,139,78,115,78;
                        DEFB 135,100,119,100,135,74,119,74;
                        DEFB 131,102,123,102,131,72,123,72;
                        DEFB 159,87,96,87,159,87,96,87  ;
                        DEFB 158,92,96,92,158,82,96,82  ;
                        DEFB 157,97,97,97,157,77,97,77  ;
                        DEFB 155,101,99,101,155,73,99,73;
                        DEFB 152,106,102,106,152,68,102,68;
                        DEFB 149,109,105,109,149,65,105,65;
                        DEFB 145,113,109,113,145,61,109,61;
                        DEFB 141,115,113,115,141,59,113,59;
                        DEFB 136,117,118,117,136,57,118,57;
                        DEFB 131,118,123,118,131,56,123,56;
                        DEFB 177,87,77,87,177,87,77,87  ;
                        DEFB 176,92,78,92,176,82,78,82  ;
                        DEFB 176,97,78,97,176,77,78,77  ;
                        DEFB 174,102,80,102,174,72,80,72;
                        DEFB 173,106,81,106,173,68,81,68;
                        DEFB 170,111,84,111,170,63,84,63;
                        DEFB 168,115,86,115,168,59,86,59;
                        DEFB 165,119,89,119,165,55,89,55;
                        DEFB 161,123,93,123,161,51,93,51;
                        DEFB 158,126,96,126,158,48,96,48;
                        DEFB 154,129,100,129,154,45,100,45;
                        DEFB 149,131,105,131,149,43,105,43;
                        DEFB 145,133,109,133,145,41,109,41;
                        DEFB 140,135,114,135,140,39,114,39;
                        DEFB 135,136,119,136,135,38,119,38;
                        DEFB 130,137,124,137,130,37,124,37;
                        DEFB 197,87,57,87,197,87,57,87  ;
                        DEFB 196,92,58,92,196,82,58,82  ;
                        DEFB 196,97,58,97,196,77,58,77  ;
                        DEFB 195,102,59,102,195,72,59,72;
                        DEFB 194,107,60,107,194,67,60,67;
                        DEFB 192,111,62,111,192,63,62,63;
                        DEFB 190,116,64,116,190,58,64,58;
                        DEFB 255                        ; END OF DATA FLAG
                        ;    DEFB 188,121,66,121,188,53,66,53;
                        ;    DEFB 185,125,69,125,185,49,69,49;
                        ;    DEFB 183,129,71,129,183,45,71,45;
                        ;    DEFB 179,133,75,133,179,41,75,41;
                        ;   DEFB 176,136,78,136,176,38,78,38;
                        ;   DEFB 255                        ; END OF DATA FLAG


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Logo coordinates data      ;1796 BYTES
LOGO_COORDINATES_DATA_6:
                        ; NOFLOW                          ;

                        DEFB 36,90,36,91,36,92,36,93    ;
                        DEFB 36,94,36,95,36,96,36,97    ;
                        DEFB 36,98,36,99,36,100,36,101  ;
                        DEFB 37,89,37,102,38,88,38,91   ;
                        DEFB 38,92,38,93,38,94,38,95    ;
                        DEFB 38,96,38,97,38,98,38,99    ;
                        DEFB 38,100,38,103,39,88,39,90  ;
                        DEFB 39,101,39,103,40,88,40,90  ;
                        DEFB 40,101,40,103,41,88,41,90  ;
                        DEFB 41,101,41,103,42,88,42,90  ;
                        DEFB 42,101,42,103,43,88,43,90  ;
                        DEFB 43,101,43,103,44,88,44,90  ;
                        DEFB 44,101,44,103,45,88,45,90  ;
                        DEFB 45,101,45,103,46,88,46,90  ;
                        DEFB 46,101,46,103,47,88,47,90  ;
                        DEFB 47,91,47,100,47,101,47,103 ;
                        DEFB 48,88,48,91,48,92,48,93    ;
                        DEFB 48,98,48,99,48,100,48,103  ;
                        DEFB 49,89,49,93,49,98,49,102   ;
                        DEFB 50,90,50,91,50,92,50,93    ;
                        DEFB 50,98,50,99,50,100,50,101  ;
                        DEFB 52,95,52,96,52,97,52,98    ;
                        DEFB 52,99,52,100,52,101,52,102 ;
                        DEFB 52,103,53,94,53,103,54,93  ;
                        DEFB 54,96,54,97,54,98,54,99    ;
                        DEFB 54,100,54,101,54,102,54,103;
                        DEFB 55,93,55,95,55,96,56,93    ;
                        DEFB 56,95,57,93,57,95,58,88    ;
                        DEFB 58,89,58,90,58,91,58,92    ;
                        DEFB 58,93,58,95,59,88,59,95    ;
                        DEFB 60,88,60,89,60,90,60,91    ;
                        DEFB 60,92,60,93,60,95,61,93    ;
                        DEFB 61,95,62,93,62,95,63,93    ;
                        DEFB 63,95,63,96,64,93,64,96    ;
                        DEFB 64,97,64,98,64,99,64,100   ;
                        DEFB 64,101,64,102,64,103,65,94 ;
                        DEFB 65,103,66,95,66,96,66,97   ;
                        DEFB 66,98,66,99,66,100,66,101  ;
                        DEFB 66,102,66,103,68,90,68,91  ;
                        DEFB 68,92,68,93,68,94,68,95    ;
                        DEFB 68,96,68,97,68,98,68,99    ;
                        DEFB 68,100,68,101,69,89,69,90  ;
                        DEFB 69,101,69,102,70,88,70,89  ;
                        DEFB 70,91,70,92,70,93,70,94    ;
                        DEFB 70,95,70,96,70,97,70,98    ;
                        DEFB 70,99,70,100,70,102,70,103 ;
                        DEFB 71,88,71,90,71,91,71,100   ;
                        DEFB 71,101,71,103,72,88,72,90  ;
                        DEFB 72,101,72,103,73,88,73,90  ;
                        DEFB 73,95,73,101,73,103,74,88  ;
                        DEFB 74,90,74,94,74,95,74,101   ;
                        DEFB 74,103,75,88,75,90,75,93   ;
                        DEFB 75,95,75,101,75,103,76,88  ;
                        DEFB 76,90,76,93,76,95,76,101   ;
                        DEFB 76,103,77,88,77,90,77,93   ;
                        DEFB 77,95,77,101,77,103,78,88  ;
                        DEFB 78,90,78,93,78,95,78,101   ;
                        DEFB 78,103,79,88,79,90,79,91   ;
                        DEFB 79,92,79,93,79,95,79,101   ;
                        DEFB 79,103,80,88,80,89,80,91   ;
                        DEFB 80,92,80,94,80,95,80,101   ;
                        DEFB 80,103,81,89,81,90,81,93   ;
                        DEFB 81,94,81,102,81,103,82,90  ;
                        DEFB 82,91,82,92,82,93,82,103   ;
                        DEFB 84,88,84,89,84,90,84,91    ;
                        DEFB 84,92,84,93,84,94,84,95    ;
                        DEFB 84,96,84,97,84,98,84,99    ;
                        DEFB 84,100,84,101,84,102,84,103;
                        DEFB 85,88,85,103,86,88,86,89   ;
                        DEFB 86,90,86,91,86,92,86,93    ;
                        DEFB 86,94,86,95,86,96,86,97    ;
                        DEFB 86,98,86,99,86,100,86,101  ;
                        DEFB 86,103,87,101,87,103,88,101;
                        DEFB 88,103,89,101,89,103,90,101;
                        DEFB 90,103,91,101,91,103,92,101;
                        DEFB 92,103,93,101,93,103,94,101;
                        DEFB 94,103,95,100,95,101,95,103;
                        DEFB 96,88,96,89,96,90,96,91    ;
                        DEFB 96,92,96,93,96,94,96,95    ;
                        DEFB 96,96,96,97,96,98,96,99    ;
                        DEFB 96,100,96,102,96,103,97,88 ;
                        DEFB 97,101,97,102,98,88,98,89  ;
                        DEFB 98,90,98,91,98,92,98,93    ;
                        DEFB 98,94,98,95,98,96,98,97    ;
                        DEFB 98,98,98,99,98,100,98,101  ;
                        DEFB 100,90,100,91,100,92,100,93;
                        DEFB 100,94,100,95,100,96,100,97;
                        DEFB 100,98,100,99,100,100,100,101;
                        DEFB 100,102,100,103,101,89,101,90;
                        DEFB 101,103,102,88,102,89,102,91;
                        DEFB 102,92,102,93,102,94,102,95;
                        DEFB 102,96,102,97,102,98,102,99;
                        DEFB 102,100,102,101,102,102,102,103;
                        DEFB 103,88,103,90,103,91,104,88;
                        DEFB 104,90,105,88,105,90,106,88;
                        DEFB 106,90,107,88,107,90,108,88;
                        DEFB 108,90,109,88,109,90,110,88;
                        DEFB 110,90,111,88,111,90,112,88;
                        DEFB 112,90,112,91,112,92,112,93;
                        DEFB 112,94,112,95,112,96,112,97;
                        DEFB 112,98,112,99,112,100,112,101;
                        DEFB 112,102,112,103,113,88,113,89;
                        DEFB 113,103,114,88,114,89,114,90;
                        DEFB 114,91,114,92,114,93,114,94;
                        DEFB 114,95,114,96,114,97,114,98;
                        DEFB 114,99,114,100,114,101,114,102;
                        DEFB 114,103,116,88,116,89,116,90;
                        DEFB 116,96,116,97,116,98,116,99;
                        DEFB 116,100,116,101,117,88,117,90;
                        DEFB 117,95,117,96,117,101,117,102;
                        DEFB 118,88,118,90,118,94,118,95;
                        DEFB 118,97,118,98,118,99,118,100;
                        DEFB 118,102,118,103,119,88,119,90;
                        DEFB 119,94,119,96,119,97,119,100;
                        DEFB 119,101,119,103,120,88,120,90;
                        DEFB 120,94,120,96,120,101,120,103;
                        DEFB 121,88,121,90,121,94,121,96;
                        DEFB 121,101,121,103,122,88,122,90;
                        DEFB 122,94,122,96,122,101,122,103;
                        DEFB 123,88,123,90,123,94,123,96;
                        DEFB 123,101,123,103,124,88,124,90;
                        DEFB 124,94,124,96,124,101,124,103;
                        DEFB 125,88,125,90,125,94,125,96;
                        DEFB 125,101,125,103,126,88,126,90;
                        DEFB 126,91,126,93,126,94,126,96;
                        DEFB 126,101,126,103,127,88,127,89;
                        DEFB 127,91,127,92,127,93,127,95;
                        DEFB 127,101,127,103,128,89,128,90;
                        DEFB 128,94,128,95,128,101,128,103;
                        DEFB 129,90,129,91,129,92,129,93;
                        DEFB 129,94,129,102,129,103,130,103;
                        DEFB 132,89,132,90,132,99,132,100;
                        DEFB 133,88,133,91,133,98,133,101;
                        DEFB 134,88,134,91,134,98,134,101;
                        DEFB 135,89,135,90,135,99,135,100;
                        DEFB 141,88,141,89,142,88,142,90;
                        DEFB 142,91,143,88,143,92,143,93;
                        DEFB 144,88,144,90,144,91,144,94;
                        DEFB 144,95,145,88,145,90,145,92;
                        DEFB 145,93,145,96,145,97,146,88;
                        DEFB 146,90,146,94,146,95,146,98;
                        DEFB 146,99,147,88,147,90,147,96;
                        DEFB 147,97,147,100,147,101,148,88;
                        DEFB 148,90,148,98,148,99,148,102;
                        DEFB 148,103,149,89,149,90,149,96;
                        DEFB 149,97,149,100,149,101,150,90;
                        DEFB 150,94,150,95,150,98,150,99;
                        DEFB 151,92,151,93,151,96,151,97;
                        DEFB 152,90,152,91,152,94,152,95;
                        DEFB 153,88,153,89,153,92,153,93;
                        DEFB 154,88,154,90,154,91,155,88;
                        DEFB 155,89,157,88,157,89,157,90;
                        DEFB 157,91,157,92,157,93,157,94;
                        DEFB 157,95,157,96,157,97,157,98;
                        DEFB 157,99,157,100,157,101,157,102;
                        DEFB 157,103,158,88,158,103,159,88;
                        DEFB 159,90,159,91,159,92,159,93;
                        DEFB 159,94,159,95,159,96,159,97;
                        DEFB 159,98,159,99,159,100,159,101;
                        DEFB 159,102,159,103,160,88,160,90;
                        DEFB 161,88,161,90,162,88,162,90;
                        DEFB 163,88,163,90,164,88,164,90;
                        DEFB 165,88,165,90,166,88,166,90;
                        DEFB 167,88,167,90,168,88,168,90;
                        DEFB 169,88,169,90,170,89,170,90;
                        DEFB 171,90,173,88,173,89,173,90;
                        DEFB 173,91,173,92,173,93,173,94;
                        DEFB 173,95,173,96,173,97,173,98;
                        DEFB 173,99,173,100,173,101,173,102;
                        DEFB 173,103,174,88,174,103,175,88;
                        DEFB 175,89,175,90,175,91,175,92;
                        DEFB 175,93,175,94,175,95,175,96;
                        DEFB 175,97,175,98,175,99,175,100;
                        DEFB 175,101,175,103,176,101,176,103;
                        DEFB 177,92,177,101,177,103,178,92;
                        DEFB 178,93,178,101,178,103,179,92;
                        DEFB 179,94,179,101,179,103,180,92;
                        DEFB 180,94,180,101,180,103,181,92;
                        DEFB 181,94,181,101,181,103,182,92;
                        DEFB 182,94,182,101,182,103,183,92;
                        DEFB 183,94,183,101,183,103,184,92;
                        DEFB 184,94,184,101,184,103,185,92;
                        DEFB 185,95,185,96,185,97,185,98;
                        DEFB 185,99,185,100,185,103,186,93;
                        DEFB 186,102,187,94,187,95,187,96;
                        DEFB 187,97,187,98,187,99,187,100;
                        DEFB 187,101,189,88,189,89,189,90;
                        DEFB 189,91,189,92,189,93,189,94;
                        DEFB 189,95,189,96,189,97,189,98;
                        DEFB 189,99,189,100,189,101,189,102;
                        DEFB 189,103,190,88,190,103,191,88;
                        DEFB 191,89,191,90,191,91,191,92;
                        DEFB 191,93,191,94,191,95,191,96;
                        DEFB 191,97,191,98,191,99,191,100;
                        DEFB 191,101,191,102,191,103,192,93;
                        DEFB 193,93,193,94,194,93,194,94;
                        DEFB 194,95,195,93,195,95,195,96;
                        DEFB 196,93,196,96,197,93,197,94;
                        DEFB 197,96,198,94,198,95,198,96;
                        DEFB 199,95,199,96,200,96,201,88;
                        DEFB 201,89,201,90,201,91,201,92;
                        DEFB 201,93,201,94,201,95,201,96;
                        DEFB 201,97,201,98,201,99,201,100;
                        DEFB 201,101,201,102,201,103,202,88;
                        DEFB 202,103,203,88,203,89,203,90;
                        DEFB 203,91,203,92,203,93,203,94;
                        DEFB 203,95,203,96,203,97,203,98;
                        DEFB 203,99,203,100,203,101,203,102;
                        DEFB 203,103,205,88,205,89,206,88;
                        DEFB 206,90,206,91,207,88,207,92;
                        DEFB 207,93,208,88,208,90,208,91;
                        DEFB 208,94,208,95,209,88,209,90;
                        DEFB 209,92,209,93,209,96,209,97;
                        DEFB 210,88,210,90,210,94,210,95;
                        DEFB 210,98,210,99,211,88,211,90;
                        DEFB 211,96,211,97,211,100,211,101;
                        DEFB 212,88,212,90,212,98,212,99;
                        DEFB 212,102,212,103,213,89,213,90;
                        DEFB 213,96,213,97,213,100,213,101;
                        DEFB 214,90,214,94,214,95,214,98;
                        DEFB 214,99,215,92,215,93,215,96;
                        DEFB 215,97,216,90,216,91,216,94;
                        DEFB 216,95,217,88,217,89,217,92;
                        DEFB 217,93,218,88,218,90,218,91;
                        DEFB 219,88,219,89              ;
                        DEFB 255                        ; END OF DATA FLAG
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

LOGO_COORDINATES_DATA_TEMP_6:
                        DEFS 1796                       ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ; Decompress
COPY_SHIP_DIAGRAM_TO_BLANK_BUFFER_6:

                        LD HL,DIAGRAM_COORDINATE_DATA_6 ; Point at first screen data
                        LD C,(HL)                       ; Get first data byte into C
                        INC HL                          ; Move to next data address
                        LD DE,SCREEN1_EMPTY             ; DE=Empty Screen address
T65508_6:               ;                               ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        LD A,(HL)                       ; Get second data byte into A
                        CP C                            ; Compare second data byte with first
                        JR Z,T65523_6                   ; If same then jump to copy data to screen loop
                        LD (DE),A                       ; Place data to screen address
                        INC HL                          ; Move to next data address
                        INC DE                          ; Move to next screen data
T65515_6:
                        PUSH HL                         ;
                        LD A,(HL)                       ;
                        CP 0                            ;
                        JR NZ,SKIP_END_TEST_6           ;
                        INC HL                          ;
                        LD A,(HL)                       ;
                        CP 0                            ;
                        JR NZ,SKIP_END_TEST_6           ;
                        INC HL                          ;
                        LD A,(HL)                       ;
                        CP 0                            ;
                        JR NZ,SKIP_END_TEST_6           ;
                        INC HL                          ;
                        LD A,(HL)                       ;
                        CP 0                            ;
                        JR NZ,SKIP_END_TEST_6           ;
                        POP HL                          ;
                        RET                             ;
SKIP_END_TEST_6:
                        POP HL                          ;


                        JP T65508_6                     ; Jumpback to continue if not
                        ; RET                             ; Finished so return
T65523_6:
; Setup copy data to screen loop
                        INC HL                          ; Move to next data address
                        LD B,(HL)                       ; Get data into B for amount of data the same to setup a loop
                        INC HL                          ; Move to next data address
                        LD A,(HL)                       ; Get data into A for value to copy to screen
T65527_6:
; Copy data to screen loop
                        LD (DE),A                       ; Place data to screen address
                        INC DE                          ; Move to next screen address
                        DJNZ T65527_6                   ; Jump back until block of data is copued to screen
                        INC HL                          ; Move to next data address
                        JR T65515_6                     ;


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Data for diagram coordinates (Compressed)    1112
DIAGRAM_COORDINATE_DATA_6:
                        DEFB 254,254,70,0,15,255,240,14 ;
                        DEFB 254,24,0,32,138,42,40,8    ;
                        DEFB 16,254,10,0,2,4,81,83      ;
                        DEFB 42,254,12,0,4,0,0,8        ;
                        DEFB 46,0,40,168,164,16,8,138   ;
                        DEFB 42,254,5,0,64,254,14,0     ;
                        DEFB 4,24,15,192,38,238,241,0   ;
                        DEFB 46,238,238,240,0,171,0,0   ;
                        DEFB 64,254,16,0,24,8,0,31      ;
                        DEFB 175,254,8,255,3,131,129,3  ;
                        DEFB 142,52,32,231,41,192,254,6 ;
                        DEFB 0,1,4,78,64,143,240,0      ;
                        DEFB 0,42,47,47,34,243,211,158  ;
                        DEFB 8,57,202,112,254,81,0,12   ;
                        DEFB 0,16,17,254,24,0,32,138    ;
                        DEFB 106,40,136,16,254,10,0,2   ;
                        DEFB 4,80,98,42,254,12,0,2      ;
                        DEFB 0,0,48,17,128,16,73,164    ;
                        DEFB 80,8,154,42,254,5,0,128    ;
                        DEFB 254,14,0,2,104,16,32,17    ;
                        DEFB 85,80,128,53,85,85,80,0    ;
                        DEFB 213,0,0,128,254,16,0,8     ;
                        DEFB 8,0,16,16,254,9,0,120      ;
                        DEFB 1,228,81,76,24,72,178,32   ;
                        DEFB 254,6,0,1,228,81,65,8      ;
                        DEFB 16,0,0,10,52,180,162,138   ;
                        DEFB 148,81,6,18,44,136,254,81  ;
                        DEFB 0,10,0,0,32,162,240,254    ;
                        DEFB 22,0,62,137,170,39,8,16    ;
                        DEFB 254,10,0,2,4,80,82,42      ;
                        DEFB 254,12,0,1,0,0,192,8       ;
                        DEFB 64,16,70,147,144,8,106,41  ;
                        DEFB 254,4,0,1,254,15,0,1       ;
                        DEFB 8,16,32,9,187,176,64,59    ;
                        DEFB 187,187,176,0,235,0,1,16   ;
                        DEFB 254,16,0,4,16,0,16,8       ;
                        DEFB 254,9,0,7,129,4,81,68      ;
                        DEFB 6,72,163,224,254,6,0,1     ;
                        DEFB 4,95,66,8,16,0,3,209       ;
                        DEFB 36,164,162,138,148,81,1,146;
                        DEFB 40,248,254,77,0,62,0,8     ;
                        DEFB 0,9,0,255,160,34,136,254   ;
                        DEFB 24,0,32,0,8,16,0,66        ;
                        DEFB 16,32,0,62,0,8,0,0         ;
                        DEFB 1,20,81,83,42,254,13,0     ;
                        DEFB 128,1,0,4,32,254,11,0      ;
                        DEFB 2,254,15,0,4,136,16,32     ;
                        DEFB 20,85,80,32,53,85,85,80    ;
                        DEFB 56,61,0,2,16,254,16,0      ;
                        DEFB 4,32,0,16,4,254,10,0       ;
                        DEFB 121,4,81,68,1,72,162,254   ;
                        DEFB 7,0,1,4,80,66,8,16         ;
                        DEFB 0,252,31,36,164,162,138,148;
                        DEFB 81,0,82,40,128,254,77,0    ;
                        DEFB 32,0,0,0,8,128,0,35        ;
                        DEFB 162,136,254,23,0,67,192,0  ;
                        DEFB 8,16,0,69,16,32,0,8        ;
                        DEFB 0,8,0,0,0,227,142,74       ;
                        DEFB 203,254,13,0,64,2,0,2      ;
                        DEFB 16,0,16,254,9,0,4,254      ;
                        DEFB 15,0,24,72,18,32,18,110    ;
                        DEFB 240,16,46,238,238,240,7,135;
                        DEFB 0,0,16,254,16,0,2,32       ;
                        DEFB 0,32,2,254,10,0,7,4        ;
                        DEFB 81,76,33,72,162,32,254,6   ;
                        DEFB 0,1,4,209,68,8,0,127       ;
                        DEFB 0,32,164,164,166,138,148,81;
                        DEFB 8,82,40,136,254,77,0,32    ;
                        DEFB 241,171,199,8,64,16,32,162 ;
                        DEFB 136,254,7,0,224,0,64,10    ;
                        DEFB 254,12,0,32,0,0,9,16       ;
                        DEFB 0,37,39,115,148,8,115,201  ;
                        DEFB 254,5,0,2,254,14,0,32      ;
                        DEFB 4,0,1,16,0,8,254,7         ;
                        DEFB 0,3,224,8,254,15,0,6       ;
                        DEFB 8,18,32,25,21,80,0,53      ;
                        DEFB 85,85,80,0,112,0,0,16      ;
                        DEFB 254,16,0,1,64,0,64,1       ;
                        DEFB 254,10,0,1,3,142,52,30     ;
                        DEFB 103,33,192,254,6,0,1,3     ;
                        DEFB 78,68,8,15,128,0,32,164    ;
                        DEFB 164,154,138,211,145,7,153,200;
                        DEFB 112,254,77,0,62,138,106,40 ;
                        DEFB 136,32,16,17,38,136,254,6  ;
                        DEFB 0,1,16,0,64,2,254,12       ;
                        DEFB 0,16,0,0,8,144,0,37        ;
                        DEFB 40,164,88,8,138,42,254,5   ;
                        DEFB 0,18,254,14,0,16,4,0       ;
                        DEFB 0,144,0,4,254,7,0,60       ;
                        DEFB 30,16,254,15,0,1,136,20    ;
                        DEFB 32,24,155,176,0,59,187,187 ;
                        DEFB 176,0,15,224,0,33,240,0    ;
                        DEFB 4,30,64,254,8,0,1,240      ;
                        DEFB 0,64,192,1,128,0,132,0     ;
                        DEFB 0,0,2,144,0,7,144,254      ;
                        DEFB 18,0,8,8,240,254,90,0      ;
                        DEFB 32,138,42,47,136,31,240,14 ;
                        DEFB 26,136,254,6,0,2,3,142     ;
                        DEFB 74,207,254,12,0,8,0,0      ;
                        DEFB 15,80,0,40,167,167,208,8   ;
                        DEFB 122,44,254,5,0,32,254,14   ;
                        DEFB 0,8,8,0,0,95,255,250       ;
                        DEFB 254,7,255,192,1,32,254,16  ;
                        DEFB 0,104,5,192,22,69,80,0     ;
                        DEFB 53,85,85,80,0,224,28,0     ;
                        DEFB 65,0,0,4,33,64,254,8       ;
                        DEFB 0,1,0,0,64,176,30,0        ;
                        DEFB 0,74,254,4,0,128,0,8       ;
                        DEFB 80,254,18,0,8,8,254,30     ;
                        DEFB 0,16,8,31,240,14,254,25    ;
                        DEFB 0,67,81,72,254,45,0,54     ;
                        DEFB 219,108,109,182,27,54,214,254;
                        DEFB 167,0,1,240,0,64,8,32      ;
                        DEFB 16,17,254,41,0,28,195,0    ;
                        DEFB 121,128,254,27,0,28,219,120;
                        DEFB 121,158,219,30,214,254,168,0;
                        DEFB 64,0,64,8,64,16,32,162     ;
                        DEFB 240,254,39,0,54,192,0,108  ;
                        DEFB 254,30,0,96,0,0,112,254    ;
                        DEFB 170,0,67,158,72,8,128,0    ;
                        DEFB 32,34,136,254,39,0,54,243  ;
                        DEFB 120,109,156,121,156,108,254,24;
                        DEFB 0,63,254,7,255,254,168,0   ;
                        DEFB 68,81,80,9,0,255,163,162   ;
                        DEFB 136,254,39,0,48,219,108,109;
                        DEFB 182,219,182,214,254,200,0,67;
                        DEFB 209,96,10,0,0,32,162,136   ;
                        DEFB 254,39,0,30,219,108,109,182;
                        DEFB 219,54,214,254,200,0,68,81 ;
                        DEFB 80,12,0,16,17,38,136,254   ;
                        DEFB 39,0,6,219,108,109,158,219 ;
                        DEFB 30,214,254,200,0,68,209,80 ;
                        DEFB 15,255,240,14,26,136,254,39;
                        DEFB 0,54,219,108,109,182,123,54;
                        DEFB 214                        ;
                        DEFB 0,0,0,0                    ; END OF DATA FLAG
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; x up/down,  y left/right,  UP/DOWN SPEED,  LEFT/RIGHT SPEED,   0 LEFT, 1 RIGHT      0 UP, 1 DOWN     Colour   x up/down RESET,  y left/right RESET    Star speed counter
;    0              1             2                 3                  4                  5             6             7                 8                   9
; Setup Start stars data


START_STAR_DATA_6:      ;250 Bytes                      ;

                        DB 67-16,147,255, 1,1,0,0,67-16,147,0 ;
                        DB 71-16,146,255, 2,1,0,0,71-16,146,0 ;
                        DB 76-16,144,1, 1,1,0,0,76-16,144,0 ;
                        DB 80-16,141,2, 2,1,0,0 ,80-16,141,0 ; Top right
                        DB 83-16,137,1, 1,1,0,0 ,83-16,137,0 ;
                        DB 85-16,133,2, 2,1,0,0 ,85-16,133,0 ;
                        DB 86-16,128,1, 1,1,0,0 ,86-16,128,0 ;

                        DB 67-16,107,255, 2,0,0,0,67-16,107,0 ;
                        DB 71-16,107,255, 1,0,0,0,71-16,107,0 ;
                        DB 76-16,109,1, 2,0,0,0,76-16,109,0 ; Top left
                        DB 80-16,112,2, 1,0,0,0, 80-16,112,0 ;
                        DB 83-16,116,1, 2,0,0,0, 83-16,116,0 ;
                        DB 85-16,120,2, 1,0,0,0, 85-16,120,0 ;
                        DB 86-16,125,1, 2,0,0,0, 86-16,125,0 ;
; x up/down,  y left/right,  UP/DOWN SPEED,  LEFT/RIGHT SPEED,   0 LEFT, 1 RIGHT      0 UP, 1 DOWN     Colour   x up/down RESET,  y left/right RESET    Star speed counter
;    0              1             2                 3                  4                  5             6             7                 8                   9

                        DB 67-16,147,255, 1,1,1,0,67-16,147,0 ;
                        DB 62-16,146,255, 2,1,1,0,62-16,146,0 ;
                        DB 57-16,144,1, 1,1,1,0,57-16,144,0 ; Bottom right
                        DB 53-16,141,2, 2,1,1,0,53-16,141,0 ;
                        DB 50-16,137,1, 1,1,1,0,50-16,137,0 ;
                        DB 48-16,133,2, 2,1,1,0,48-16,133,0 ;
                        DB 47-16,128,1, 1,1,1,0,47-16,128,0 ;

                        DB 67-16,107,255, 2,0,1,0,67-16,107,0 ;
                        DB 62-16,107,255, 1,0,1,0,62-16,107,0 ;
                        DB 57-16,109,1, 2,0,1,0,57-16,109,0 ; Bottom left
                        DB 53-16,112,2, 1,0,1,0,53-16,112,0 ;
                        DB 50-16,116,1, 2,0,1,0,50-16,116,0;
                        DB 48-16,120,2, 1,0,1,0,48-16,120,0;
                        DB 47-16,125,1, 2,0,1,0,47-16,125,0;


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Display the logo RANDOM DOTS using the coordinates data
DISPLAY_LOGO_COORDINATES_6:

                        CALL CLEAR_BUFFER               ; Clear any rubbish out of the screen buffer
                        LD HL,LOGO_MODE                 ; Get logo animation counter
                        INC (HL)                        ; Add 1 to animation counter;
                        LD D,(HL)                       ; Save logo counter into D
                        LD A,D                          ; Get logo animation counter
                        CP 2                            ; Is logo animation counter at 2 or above?
                        JR C,SKIP_NOT_FULL_LOGO_DRAW2_6 ; If not then skip only updating half of the dots to make faster
                        LD BC,550                       ; Set counter to hold the logo data (550)

                        JP DISPLAY_LOGO_COORDINATES2_6  ; Display dots

SKIP_NOT_FULL_LOGO_DRAW2_6:
                        LD BC,1154                      ; Loop for 6 phases to speed up the animation before returning

DISPLAY_LOGO_COORDINATES2_6:
                        LD HL,LOGO_COORDINATES_DATA_TEMP_6 ; Point to the changable logo data
DISPLAY_LOGO_COORDINATES_LOOP_6:
                        PUSH BC                         ;
                        LD C,(HL)                       ; Get x coordinate
                        INC HL                          ; Move to next address
                        LD A,(HL)                       ; Get y coordinate
                        SUB 40                          ; Move up the play area
                        LD B,A                          ; B=up/down coordinate

                        LD A,D                          ; (LOGO_MODE)                ; Get logo animation counter
                        ; LD D,A                          ;
                        CP 2                            ; Is logo animation counter at 2 or above?
                        JR C,SKIP_NOT_FULL_LOGO_DRAW_6  ; If not then skip only updating half of the dots to make faster


                        INC HL                          ; Move to next address
                        INC HL                          ; Move to next address
                        INC HL                          ; Move to next address
                        INC HL                          ; Move to next address



SKIP_NOT_FULL_LOGO_DRAW_6:
                        INC HL                          ; Move to next address
                        ;  PUSH HL                         ; Save logo pointer


                        CALL PLOT                       ; Place dot to screen

                        ;  POP HL                          ; Restore logo pointer
                        POP BC                          ; Restore internal loop
                        DEC C                           ;
                        JR NZ,DISPLAY_LOGO_COORDINATES_LOOP_6;  Jump back if internal loop is not completed

                        DJNZ DISPLAY_LOGO_COORDINATES_LOOP_6; Jump back to complete phase loop

                        LD A,D                          ; (LOGO_MODE)                ; Get logo animation counter
                        CP 14                           ; Are we greater than 14
                        JR C,SKIP_IMPLODE_LOGO_6        ; If so then skip imploding logo

                        CALL IMPLODE_LOGO_6             ; Implode logo
                        RET                             ;

SKIP_IMPLODE_LOGO_6:
                        CALL EXPLODE_LOGO_6             ; Explode the logo
SKIP_EXPLODE_LOGO_6:

                        RET                             ; Return


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Position dots for logo
EXPLODE_LOGO_6:
                        LD DE,7010                      ; Rom location to retreive random data
                        LD HL,LOGO_COORDINATES_DATA_TEMP_6; Data location for movable data

                        LD BC,1154                      ; 1796   Loop for 6 phases to speed up the animation before returning
EXPLODE_LOGO_LOOP_6:
                        LD A,(DE)                       ;
                        CP 100                          ;

                        JR C,SKIP_LEFT_6                ;
                        CALL MOVE_DOT_LEFT_6            ;
                        JP SKIP_RIGHT_6                 ;
SKIP_LEFT_6:
                        ;   JR C,SKIP_RIGHT                 ;
                        CALL MOVE_DOT_RIGHT_6           ;
SKIP_RIGHT_6:
                        INC HL                          ; Move to next address
                        INC DE                          ;
                        LD A,(DE)                       ;
                        CP 100                          ;

                        JR C,SKIP_LEFT2_6               ;
                        CALL MOVE_DOT_LEFT_6            ;
                        JP SKIP_RIGHT2_6                ;
SKIP_LEFT2_6:
                        ;    JR C,SKIP_RIGHT2                 ;
                        CALL MOVE_DOT_RIGHT_6           ;
SKIP_RIGHT2_6:

                        INC HL                          ; Move to next logo address
                        INC DE                          ; Move to next ROM location for next random number
                        DEC C                           ; Take 1 from internal loop
                        JR NZ,EXPLODE_LOGO_LOOP_6       ; Jump back if not zero
                        DJNZ EXPLODE_LOGO_LOOP_6        ;
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MOVE_DOT_LEFT_6:
                        DEC (HL)                        ;
                        DEC (HL)                        ;
                        LD A,R                          ;
                        CP 100                          ;
                        RET C                           ;

                        DEC (HL)                        ;
                        DEC (HL)                        ;
                        RET                             ;

MOVE_DOT_RIGHT_6:
                        INC (HL)                        ;
                        INC (HL)                        ;
                        LD A,R                          ;
                        CP 100                          ;
                        RET C                           ;

                        INC (HL)                        ;
                        INC (HL)                        ;
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Position dots for logo
IMPLODE_LOGO_6:

                        LD HL,LOGO_COORDINATES_DATA_TEMP_6; Data location for movable data
                        LD BC,1154                      ; 1796                      ; Loop for 6 phases to speed up the animation before returning
IMPLODE_LOGO_LOOP2_6:

                        LD A,(HL)                       ;
                        CP 128                          ;
                        JR C,IMPLODE_LOGO_SKIP_MOVE_DOT_LEFT_6;
                        CALL MOVE_DOT_LEFT_6            ;
                        CALL MOVE_DOT_LEFT_6            ;
                        JP IMPLODE_LOGO_SKIP_MOVE_DOT_RIGHT_6;
IMPLODE_LOGO_SKIP_MOVE_DOT_LEFT_6:
                        JR NC,IMPLODE_LOGO_SKIP_MOVE_DOT_RIGHT_6;
                        CALL MOVE_DOT_RIGHT_6           ;
                        CALL MOVE_DOT_RIGHT_6           ;
IMPLODE_LOGO_SKIP_MOVE_DOT_RIGHT_6:
                        INC HL                          ; Move to next address
                        LD A,(HL)                       ;
                        CP 100                          ;
                        JP C,IMPLODE_LOGO_SKIP_MOVE_DOT_LEFT2_6;
                        CALL MOVE_DOT_LEFT_6            ;
                        CALL MOVE_DOT_LEFT_6            ;
                        JP IMPLODE_LOGO_SKIP_MOVE_DOT_RIGHT2_6;
IMPLODE_LOGO_SKIP_MOVE_DOT_LEFT2_6:
                        JR NC,IMPLODE_LOGO_SKIP_MOVE_DOT_RIGHT2_6;
                        CALL MOVE_DOT_RIGHT_6           ;
                        CALL MOVE_DOT_RIGHT_6           ;
IMPLODE_LOGO_SKIP_MOVE_DOT_RIGHT2_6:
                        INC HL                          ; Move to next address
                        DEC C                           ;
                        JR NZ,IMPLODE_LOGO_LOOP2_6      ;
                        DJNZ IMPLODE_LOGO_LOOP2_6       ;

                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Copy initial star data to star memory
SETUP_START_STARS_6:
                        LD HL,START_STAR_DATA_6         ; Setup Start stars data
                        LD DE,SNOW_FLAKE_DATA1_6        ; Store star data for movement

                        LD BC,280                       ;
                        LDIR                            ;

                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Create stars randomly   (NOT USED)
SETUP_STARS_6:
                        LD IX,SNOW_FLAKE_DATA1_6        ; Store star data for movement
                        LD B,28                         ;
SNOWLOOP1_6:
                        PUSH BC                         ;

                        ; XOR A                           ;
                        LD (IX+9),0                     ; Speed counter
                        LD A,R                          ; Add random speed to star
                        ; CALL RND                        ; y left/right
                        AND %00111111                   ; Keep the number low
                        CP 5                            ; Are we left with a number greater than 5?
                        JR C,ADD_120_6                  ; Jump to add 120 if so

                        ADD A,100                       ; Add 100 to Y
                        JR ADD_120B_6                   ; Jump to setup Y coordinate and reset coordinate
ADD_120_6:
                        ADD A,120                       ; Add 120 to Y
ADD_120B_6:
                        LD (IX+1),A                     ; Setup y left/right
                        LD (IX+8),A                     ; Setup y left/right reset

                        LD A,R                          ; Get random number
                        AND %00011111                   ; Keep the number low
                        CP 5                            ; Are we left with a number greater than 5?
                        JR C,ADD_120C_6                 ; Jump to add 120 if so

                        ADD A,20                        ; Add 20
                        JR ADD_120D_6                   ; Jump to setup X
ADD_120C_6:
                        ADD A,40                        ; Add 40 to X
ADD_120D_6:

                        LD (IX+0),A                     ; Set x up/down
                        LD (IX+7),A                     ; Set x up/down reset

                        ; Setup UP/DOWN speed
                        LD A,R                          ;
                        AND %00000011                   ; Keep first 2 bits
                        OR A                            ; CP 0                            ;
                        CALL Z,SET_TO_2_6               ; Set A to 2 if random number is 0

                        LD (IX+2),A                     ; UP/DOWN speed

                        LD A,R                          ; Get random number
                        AND %00000001                   ; Keep first 1 bit only

; x up/down,  y left/right,  UP/DOWN SPEED,  LEFT/RIGHT SPEED,   0 LEFT, 1 RIGHT      0 UP, 1 DOWN     Colour   x up/down RESET,  y left/right RESET    Star speed counter
;    0              1             2                 3                  4                  5             6             7                 8                   9
                        LD (IX+4),A                     ; Set 0 LEFT, 1 RIGHT

                        ; Random left/right speed
                        LD A,R                          ; Get random number
                        AND %00000011                   ; Keep first 2 bit only
                        OR A                            ; CP 0                            ; All stars need to move
                        CALL Z,SET_TO_2_6               ; Set A to 2 if random number is 0
                        LD (IX+3),A                     ; Set left right speed

                        LD A,R                          ; Get random number
                        AND %00000001                   ; Keep first 1 bits only

                        LD (IX+5),A                     ; Set 0 UP, 1 DOWN
                        LD A,R                          ; Get random number

                        AND %00000111                   ; Keep first 3 bits only
                        LD (IX+6),A                     ; Colour

                        LD BC,10                        ; Move to next block of 10
                        ADD IX,BC                       ;
                        POP BC                          ; Restore loop

                        DJNZ SNOWLOOP1_6                ; Jump back to form all atars
                        RET                             ; Return
SET_TO_2_6:
                        LD A,2                          ;
                        RET                             ;

; TEMP_MOVE_STORE:        DB 0                            ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Display stars
; draw over 0 snow from data 2 and update data 2

; x up/down,  y left/right,  UP/DOWN SPEED,  LEFT/RIGHT SPEED,   0 LEFT, 1 RIGHT      0 UP, 1 DOWN     Colour   x up/down RESET,  y left/right RESET    Star speed counter
;    0              1             2                 3                  4                  5             6             7                 8                   9
DRAW_STARS_DATA1_6:     ; RET                           ;
                        ; DI                              ; Disable interupt
                        LD HL,SNOW_FLAKE_DATA1_6        ; Star coordinate data

                        LD A,(SERVICES_ON)              ; Get Services on/off status

                        OR A                            ; Services off?
                        JR Z,SKIP_SETTING_FEWER_STARS   ;
                        LD B,9                          ; 14 stars to display
                        JP SNOWLOOP2_1_6                ;
SKIP_SETTING_FEWER_STARS:
                        LD B,28                         ; 28 stars to display
SNOWLOOP2_1_6:
                        PUSH BC                         ; Save stars loop

                        LD B,(HL)                       ; Get current up/down data for star
                        INC HL                          ; Move to next data
                        LD C,(HL)                       ; Get current left/right data for star

                        PUSH BC                         ; Save coordinates
                        ;   PUSH HL                         ; Save current star data address
                        CALL PLOT                       ; Display star
                        ;  POP HL                          ; Restore current star data address
                        POP BC                          ; Restore coordinates

                        LD DE,8                         ; Setup DE for addition
                        ADD HL,DE                       ; Add 8 to star data pointer to get star speed counter

                        LD A,(HL)                       ; Get star speed counter
                        CP 10                           ; Is it 10 or lower?
                        JR C,SKIP_LARGE_STAR_6          ; Skip adding to star to make it larger if so
; Larger star
                        INC C                           ; Add 1 to left/right coordinate
                        PUSH BC                         ; Save coordinates
                        ; PUSH HL                         ; Save current star data address
                        CALL PLOT                       ; Display star
                        ; POP HL                          ; Restore current star data address
                        POP BC                          ; Restore coordinates
                        INC B                           ; Add 1 to up/down coordinate

                        PUSH BC                         ; Save coordinates
                        ;  PUSH HL                         ; Save current star data address
                        CALL PLOT                       ; Display star
                        ;  POP HL                          ; Restore current star data address
                        POP BC                          ; Restore coordinates

                        DEC C                           ; Take 1 from left/right coordinate

                        PUSH BC                         ; Save coordinates
                        ;  PUSH HL                         ; Save current star data address
                        CALL PLOT                       ; Display star
                        ;  POP HL                          ; Restore current star data address
                        POP BC                          ; Restore coordinates

SKIP_LARGE_STAR_6:
                        INC HL                          ; Move to next star data

                        LD A,(SERVICES_ON)              ; Get Services on/off status
                        OR A                            ; Services off?
                        JR Z,SKIP_JUMPING_OVER_STAR_DATA;
                        LD DE,20                        ; Setup DE for addition
                        ADD HL,DE                       ; Add 8 to star data pointer to get star speed counter
SKIP_JUMPING_OVER_STAR_DATA:

                        POP BC                          ; Restore draw stars loop

                        DJNZ SNOWLOOP2_1_6              ; Jump back to draw all stars

                        LD HL,SPEED                     ; Start speed
                        LD A,(SPEEDMAX)                 ; Counts up to speed. Then calls move stars
                        CP (HL)                         ; Compare speed max with speed
                        RET C                           ; Return if not up to speed yet
                        XOR A                           ; A=0
                        LD (SPEEDMAX),A                 ; Reset maximum speed
                        CALL UPDATE_DATA_6              ; Update new star locations
                        ;  EI                              ;
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FOUND_CYGNUS_GRAPHIC_1_6:

                        defb 126, 224, 0, 0             ;
                        defb 253, 144, 0, 0             ;
                        defb 255, 128, 8, 0             ;
                        defb 127, 192, 6, 0             ;
                        defb 127, 192, 3, 128           ;
                        defb 63, 192, 1, 192            ;
                        defb 31, 224, 0, 240            ;
                        defb 7, 152, 0, 120             ;
                        defb 0, 100, 0, 124             ;
                        defb 0, 18, 0, 126              ;
                        defb 0, 9, 124, 126             ;
                        defb 0, 7, 127, 222             ;
                        defb 0, 4, 247, 230             ;
                        defb 2, 7, 223, 250             ;
                        defb 1, 7, 109, 254             ;
                        defb 1, 135, 247, 252           ;
                        defb 0, 195, 251, 190           ;
                        defb 0, 227, 236, 254           ;
                        defb 0, 127, 255, 119           ;
                        defb 0, 62, 253, 159            ;
                        defb 0, 63, 127, 231            ;
                        defb 0, 31, 191, 186            ;
                        defb 0, 15, 227, 255            ;
                        defb 0, 3, 252, 243             ;


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FOUND_CYGNUS_GRAPHIC_2_6:

                        defb 143, 192, 0, 0             ;
                        defb 255, 248, 0, 0             ;
                        defb 239, 252, 0, 0             ;
                        defb 255, 253, 0, 0             ;
                        defb 235, 254, 128, 0           ;
                        defb 111, 254, 224, 0           ;
                        defb 94, 255, 120, 0            ;
                        defb 95, 255, 124, 0            ;
                        defb 63, 191, 191, 0            ;
                        defb 63, 235, 129, 128          ;
                        defb 127, 206, 128, 64          ;
                        defb 118, 61, 96, 0             ;
                        defb 241, 253, 88, 16           ;
                        defb 112, 127, 166, 8           ;
                        defb 56, 0, 105, 248            ;
                        defb 14, 0, 22, 188             ;
                        defb 5, 128, 11, 254            ;
                        defb 1, 0, 6, 246               ;
                        defb 0, 0, 1, 243               ;
                        defb 0, 0, 0, 255               ;
                        defb 0, 0, 0, 255               ;
                        defb 0, 0, 0, 127               ;
                        defb 0, 0, 0, 30                ;
                        defb 0, 0, 0, 0                 ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Colour diagram for status indicators
COLOUR_DIAGRAM_6:
                        ; Top Gun
                        LD A,(GUN_STATUS_COLOUR)        ; Get gun status colour
                        LD HL,22599+10240               ; Point to diagram ATTR location
                        LD (HL),A                       ; Set ATTR
; Lower gun
                        LD HL,22791+10240               ; Point to diagram ATTR location
                        LD (HL),A                       ; Set ATTR
; Engine

                        LD A,(ENGINE_STATUS_COLOUR)     ; Get engine status colour
                        LD HL,22692+10240               ; Point to diagram ATTR location
                        LD (HL),A                       ; Set ATTR

; Water

                        LD A,(WATER_STATUS_COLOUR)      ; Get water status colour
                        LD HL,22699+10240               ; Point to diagram ATTR location
                        LD (HL),A                       ; Set ATTR

; Food Store
                        ; INC A                           ; Move to next varable
                        LD A,(FOOD_STATUS_COLOUR)       ; Get food status colour
                        LD HL,22704+10240               ; Point to diagram ATTR location
                        LD (HL),A                       ; Set ATTR


; Cockpit

                        LD A,(COCKPIT_STATUS_COLOUR)    ; Get cockpit status colour
                        LD HL,22707+10240               ; Point to diagram ATTR location
                        LD (HL),A                       ; Set ATTR

; Fuel

                        LD A,(FUEL_STATUS_COLOUR)       ; Get fuel status colour
                        LD HL,22694+10240               ; Point to diagram ATTR location
                        LD (HL),A                       ; Set ATTR


                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ; This is assembled to the screen buffer so is wiped after the game starts
; ORG                     SCREEN1                         ;
; Start message

SAVE_CHAR_6:            DEFB 0,0                        ;

MESSAGE4B_6:
                        DB " @"                         ;
                        DB "  CYGNUS: ALPHA BY STEVE BROAD.@";
                        DB " GITHUB.COM/ECHOBEACHUK/CYGNUS@";
                        DB "            V 2020A@"       ;
                        DB "      PRE RELEASE TEST 2C.@";
                        DB " @"                         ;

                        DB "     THIS GAME IS FREELY@"  ;
                        DB "          DISTRIBUTED.@"    ;
                        DB " @"                         ;
                        DB " IF YOU PAID FOR THIS GAME THEN@";
                        DB "PLEASE ASK FOR YOUR MONEY BACK.@";
                        DB "  THIS GAME MUST NOT BE SOLD.@";
                        DB " @"                         ;
                        DB "WARNING: THIS GAME CONTAINS@";
                        DB "FLASHING IMAGES THAT MAY CAUSE@" ;
                        DB "DISCOMFORT FOR THOSE WITH@" ;
                        DB "PHOTOSENSITIVE EPILEPSY@"   ;
                        DB " @"                         ;
                        DB "      PLEASE PRESS ENTER"   ;

                        DB "~"                          ;
                        ; DB 255                          ; End of message

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Display one off game info message
DISPLAY_START_MESSAGE_6:
                        ; We want a black screen for the start.
                        ; Then a fade out screen to black.

                        LD HL,23296                     ; Start of screen memory
                        LD (HL),L                       ; Set first screen address to 0
                        LD DE,23295                     ; Second screen address
                        LD BC,6912                      ; Length of display file
                        LDDR                            ; Fill memory

                        LD A,L                          ; Colour black
                        OUT (254),A                     ; Set border black

                        ; Fill screen with random stars
;
; Used by the routines at #R62372 and #R62806.
c62388                  LD DE,2000                      ;
                        LD A,R                          ;
                        LD E,A                          ;
                        CALL c62580_6                   ;
                        LD DE,1500                      ;
                        LD HL,c62591_6+1                ;
                        LD A,5                          ;
                        LD (HL),A                       ;
                        CALL c62580_6                   ;

                        LD DE,3700                      ;
                        LD HL,c62591_6+1                ;
                        LD A,10                         ;
                        LD (HL),A                       ;
                        CALL c62580_6                   ;

                        LD DE,4500                      ;
                        LD HL,c62591_6+1                ;
                        LD A,5                          ;
                        LD (HL),A                       ;
                        CALL c62580_6                   ;

                        LD BC,65535                     ; Delay
                        CALL DELAY1LOOP                 ;

                        LD A,64                         ;
FADE_IN_STARS_LOOP_6:

                        LD HL,22528                     ; Start of ATTR memory
                        ;   OR 7
                        ;  AND %00000111
                        SET 6,A                         ;
                        LD (HL),A                       ; Set first ATTR address to light cyan on black paper
                        LD DE,22529                     ; Second ATTR address
                        LD BC,768                       ; Length of ATTR file
                        LDIR                            ; Fill memory

                        PUSH AF                         ;
                        CALL SCROLL_SCREEN_LEFT_6       ;
                        POP AF                          ;

                        ;  RLC A
                        INC A                           ; Add one to colour

                        CP 72                           ; Are we one past bright white on black?
                        JR C,FADE_IN_STARS_LOOP_6       ; Jump back if not

                        LD B,10                         ;
SCROLL_START_SCREEN_LOOP_6:
                        PUSH BC                         ;
                        CALL SCROLL_SCREEN_LEFT_6       ;

                        POP BC                          ;
                        DJNZ SCROLL_START_SCREEN_LOOP_6 ;


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                        LD HL,22528                     ;
                        LD (HL),197                     ; Flashing light cyan on black

                        LD B,10                         ;
SCROLL_START_SCREEN_LOOP2_6:
                        PUSH BC                         ;
                        CALL SCROLL_SCREEN_LEFT_6       ;

                        POP BC                          ;
                        DJNZ SCROLL_START_SCREEN_LOOP2_6 ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        LD HL,MESSAGE4B_6               ; First address of text data
                        LD DE,0                         ; Set collumn and row to 0
START_MESSAGE_LOOP_6:

; A=graphic number, DE=coordinates, HL=string pointer
                        LD A,(HL)                       ; Get current letter data from string pointer
                        CP "~"                          ;
                        RET Z                           ;
                        LD (SAVE_CHAR_6),A              ;
                        INC HL                          ; Move to next letter data

                        PUSH HL                         ; Save letter data pointer
                        PUSH DE                         ; Save collumn and row

                        CP "@"                          ;
                        JR Z,SKIP_START_MESSAGE2_6      ;

                        CP " "                          ;
                        JR Z,SKIP_START_MESSAGE2_6      ;

                        CALL DISPLAY_8X8_TEXT_c26682    ; Display text character



SKIP_START_MESSAGE2_6:

                        POP DE                          ; Restore collumn and row
                        LD A,D                          ; x position.
                        RRCA                            ; multiply by 32.
                        RRCA                            ;
                        RRCA                            ;
                        LD L,A                          ; store away in l.
                        AND 3                           ; mask bits for high byte.
                        ADD A,88                        ; 88*256=22528, start of attributes.
                        LD H,A                          ; high byte done.
                        LD A,L                          ; get x*32 again.
                        AND 224                         ; mask low byte.
                        LD L,A                          ; put in l.
                        LD A,E                          ; get y displacement.
                        ADD A,L                         ; add to low byte.
                        LD L,A                          ; hl=address of attributes.

                        LD (HL),69                      ; Light cyan on black paper

                        LD A,(SAVE_CHAR_6)              ;
                        CP "@"                          ;
                        JR Z,SKIP_START_MESSAGE_CURSOR_6 ;
                        INC L                           ; Move to next collumn for ATTR cursor
                        LD (HL),232                     ; Display flashing cursor

                        INC E                           ; Move to next collumn for text
SKIP_START_MESSAGE_CURSOR_6:
                        LD BC,4000                      ; Set delay loop
                        CALL DELAY1LOOP                 ; Delay loop

                        POP HL                          ; Restore data pointer

                        LD A,(SAVE_CHAR_6)              ;
                        CP "@"                          ;
                        JR Z,MOVE_TO_NEXT_LINE2_6       ;

                        JP START_MESSAGE_LOOP_6         ;

MOVE_TO_NEXT_LINE2_6:
                        LD E,0                          ; Set collumn to 0
                        INC D                           ; Move down 1 text line

                        JP START_MESSAGE_LOOP_6         ; Jump back to complete all lines

                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Scroll whole screen left (used for start screen)

SCROLL_SCREEN_LEFT_6:
                        LD HL,16383                     ; First screen address
                        LD BC,6144                      ; 6144 bytes to scroll
SCROLL_LEFT_LOOP_6:

                        PUSH HL                         ; Save current screen address
                        POP DE                          ; Restore current screen address into BC
                        INC DE                          ; Move to next screen address
                        SLA (HL)                        ; Shift bits left of the the current screen address
                        LD A,(DE)                       ; Get screen contents of the screen address to the right
                        ; BIT 7,A                         ; Is the last bit to the left set on?
                        RLA                             ;
                        JR NC,L43899_2_6                ; was JR Z If not then skip reseting bit of right of byte to the left
                        SET 0,(HL)                      ; Set bit of right of byte to the left
L43899_2_6:
                        INC HL                          ; Move left byte to the right one collumn
                        INC DE                          ; Move right byte to the right one collumn

                        DEC C                           ;
                        JR NZ,SCROLL_LEFT_LOOP_6        ;

                        DJNZ SCROLL_LEFT_LOOP_6         ; Jump back to complete all lines
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Fade out screen to black
FADE_OUT_6:
                        LD A,69                         ;
FADE_OUT_LOOP_6:
                        LD HL,22528                     ;
                        LD DE,22529                     ;
                        LD (HL),A                       ;
                        LD BC,767                       ;
                        LDIR                            ;

                        LD BC,8000                      ;
                        PUSH AF                         ;
                        CALL DELAY1LOOP                 ;
                        POP AF                          ;
                        DEC A                           ;
                        CP 63                           ;
                        JR NZ,FADE_OUT_LOOP_6           ;

                        LD BC,50000                     ;
                        CALL DELAY1LOOP                 ;
                        RET                             ;


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Draw individual star for start sequence (single dot)
;
; Used by the routines at #R62502, #R62525, #R62580 and #R62806.
c62436_6:               PUSH HL                         ;
                        LD A,H                          ;
                        LD C,L                          ;
                        LD H,64                         ;
                        CP 64                           ;
                        JP M,c62461_6                   ;
                        LD H,72                         ;
                        CP 128                          ;
                        JP M,c62461_6                   ;
                        LD H,80                         ;
                        CP 191                          ;
                        JP M,c62461_6                   ;
                        RET                             ;


c62461_6:
                        LD B,A                          ;
                        AND 7                           ;
                        ADD A,H                         ;
                        LD H,A                          ;
                        LD A,B                          ;
                        AND 248                         ;
                        ADD A,A                         ;
                        ADD A,A                         ;
                        LD L,A                          ;
                        LD A,C                          ;
                        LD B,A                          ;
                        AND 248                         ;
                        SRL A                           ;
                        SRL A                           ;
                        SRL A                           ;
                        ADD A,L                         ;
                        LD L,A                          ;
                        LD A,B                          ;
                        CPL                             ;
                        AND 7                           ;
                        LD B,A                          ;
                        LD A,198                        ;
c62491_6:
                        ADD A,8                         ;
                        DJNZ c62491_6                   ;
                        LD (c62498_6+1),A               ;
c62498_6:               SET 6,(HL)                      ;
                        POP HL                          ;
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Draw individual star for start sequence (slightly larger dot)
;
; Used by the routine at #R62580.
c62502_6:               CALL c62436_6                   ;
                        INC H                           ;
                        CALL c62436_6                   ;
                        DEC H                           ;
                        DEC H                           ;
                        CALL c62436_6                   ;
                        INC H                           ;
                        DEC L                           ;
                        CALL c62436_6                   ;
                        INC L                           ;
                        INC L                           ;
                        CALL c62436_6                   ;
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Draw individual star for start sequence (slightly larger dot 2)
;
; Used by the routine at #R62580.
c62525_6:               DEC H                           ;
                        CALL c62436_6                   ;
                        INC L                           ;
                        CALL c62436_6                   ;
                        INC H                           ;
                        INC L                           ;
                        CALL c62436_6                   ;
                        INC H                           ;
                        CALL c62436_6                   ;
                        DEC L                           ;
                        INC H                           ;
                        CALL c62436_6                   ;
                        DEC L                           ;
                        CALL c62436_6                   ;
                        DEC H                           ;
                        CALL c62436_6                   ;
                        DEC L                           ;
                        CALL c62436_6                   ;
                        DEC H                           ;
                        CALL c62436_6                   ;
                        INC L                           ;
; This entry point is used by the routine at #R62580.
c62564_6:
                        CALL c62436_6                   ;
                        INC L                           ;
                        CALL c62436_6                   ;
                        DEC H                           ;
                        CALL c62436_6                   ;
                        DEC L                           ;
                        CALL c62436_6                   ;
                        RET                             ;

                        ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ; Routine at 62580
;
; Used by the routine at #R62388.
c62580_6:
                        EX DE,HL                        ;
                        LD A,(HL)                       ;
                        CP 0                            ;
                        RET Z                           ;
                        LD E,A                          ;
                        INC HL                          ;
                        LD A,(HL)                       ;
                        LD D,A                          ;
                        INC HL                          ;
                        EX DE,HL                        ;
c62591_6:
                        JR c62593_6                     ;
c62593_6:
                        CALL c62502_6                   ;
                        JR c62580_6                     ;
                        CALL c62564_6                   ;
                        JR c62580_6                     ;
                        CALL c62525_6                   ;
                        JR c62580_6                     ;
                        CALL c62436_6                   ;
                        JR c62580_6                     ;


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Logo rounded corners
DISPLAY_LOGO_ROUNDED_CORNERS_6:
                        LD DE,16516                     ; Top left of logo
                        LD HL,BORDER_CORNER_GRAPHICS-8  ;
                        CALL PLACE_LOGO_CORNER_6        ;

                        LD DE,16539                     ; Top right of logo
                        CALL PLACE_LOGO_CORNER_6        ;

                        LD DE,18500                     ; Bottom left of loUHgo
                        CALL PLACE_LOGO_CORNER_6        ;

                        LD DE,18523                     ; Bottom right of logo
                        CALL PLACE_LOGO_CORNER_6        ;

                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PLACE_LOGO_CORNER_6:

                        LD C,8                          ;
                        ADD HL,BC                       ;
                        LD B,C                          ;
                        PUSH HL                         ;
                        CALL DISPLAY_CHARACTER_LOOP     ;
                        POP HL                          ;
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Alien explode dots default data
ALIEN_EXPLODE_DOTS_DEFAULT_DATA_6:

                        DEFB 132,87,122,87,128,87,125,87;
                        DEFB 132,89,122,89,132,85,122,85;
                        DEFB 130,91,124,91,130,83,124,83;
                        DEFB 129,92,125,92,129,82,125,82 ; 32 BYTES

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Copy explode data to alien data to start explode at IX+12
COPY_DEFAULT_EXPLODE_DATA_TO_CORRECT_ALIEN_6:

                        LD A,(IX+2)                     ; Get alien up/down
                        LD (ALIEN_UP_DOWN_LOCATION_6+1),A ;

                        LD A,(IX+3)                     ; Get alien left/right
                        LD (ALIEN_LEFT_RIGHT_LOCATION_6+1),A;

                        LD HL,ALIEN_EXPLODE_DOTS_DEFAULT_DATA_6 ; Load explode default data into HL
                        PUSH IX                         ; Save alien data pointer
                        LD DE,12                        ; Setup DE for addition
                        ADD IX,DE                       ; Move to alien explode data
                        LD B,16                         ; 32 bytes to copy to alien data
COPY_DEFAULT_EXPLODE_DATA_LOOP_6:
                        LD A,(HL)                       ; Get current alien explode data from default bytes
                        LD (IX+0),A                     ; Copy current data
                        INC HL                          ; Move to next default explosion data

                        LD A,(HL)                       ; Get current alien explode data from default bytes
                        LD (IX+1),A                     ; Copy current data
                        INC IX                          ; Move to next alien data
                        INC IX                          ; Move to next alien data
                        INC HL                          ; Move to next default explosion data

                        DJNZ COPY_DEFAULT_EXPLODE_DATA_LOOP_6 ; Jump back until all data is copied
                        POP IX                          ; Restore alien data pointer

                        RET                             ; Return

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Draw exploding dots
DRAW_EXPLODING_DOTS_6:


                        PUSH IX                         ; Save alien pointer
                        LD DE,12                        ; Setup DE for addition
                        ADD IX,DE                       ; Point to explode dots coordinate data
DRAW_EXPLODING_DOTS2_6:
                        LD B,16                         ; 16 dots to display
                        LD D,0                          ;
EXPLODELOOP2_1_6:
                        PUSH BC                         ; Save stars loop
                        ;  LD D,B                          ;

                        LD A,(IX+0)                     ; Get current data for star
                        ADD A,20                        ;

ALIEN_UP_DOWN_LOCATION_6:ADD A,0                        ;
                        LD B,A                          ;


; ;;;;;;;;;;;
                        LD A,(IX+1)                     ; Get current data for star
                        SUB 80                          ;

ALIEN_LEFT_RIGHT_LOCATION_6:ADD A,0                     ;
                        LD C,A                          ;

                        PUSH BC                         ;
                        ; PUSH HL
                        CALL PLOT                       ;
                        ; POP HL
                        POP BC                          ;


                        INC C                           ;
                        PUSH BC                         ;
                        ; PUSH HL
                        CALL PLOT                       ;
                        ; POP HL
                        POP BC                          ;
                        INC B                           ;

                        PUSH BC                         ;
                        ; PUSH HL
                        CALL PLOT                       ;
                        ; POP HL
                        POP BC                          ;


                        DEC C                           ;

                        ;   PUSH BC                         ;
                        ;   PUSH HL
                        CALL PLOT                       ;
                        ;    POP HL
                        ;   POP BC                          ;

                        ;   JP NEXT_EXPLODE_DOT


                        LD A,D                          ;

                        CP 0                            ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;

                        CP 1                            ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;

                        CP 2                            ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;
                        CP 2                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;

                        CP 3                            ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;
                        CP 3                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;
                        CP 3                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;

                        CP 4                            ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;
                        CP 4                            ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;
                        CP 4                            ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;
                        CP 4                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;
                        CP 4                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;

                        CP 5                            ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 5                            ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 5                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;
                        CP 5                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;

                        CP 6                            ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 6                            ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;
                        CP 6                            ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;

                        CP 7                            ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 7                            ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 7                            ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;
                        CP 7                            ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;
                        CP 7                            ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;

                        CP 8                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;
                        CP 8                            ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;

                        CP 9                            ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;
                        CP 9                            ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;

                        CP 10                           ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;
                        CP 10                           ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;

                        CP 11                           ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 11                           ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;

                        CP 12                           ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;
                        CP 12                           ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;

                        CP 13                           ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 13                           ;
                        CALL Z,MOVE_EXPLODE_DOT_UP_6    ;

                        CP 14                           ;
                        CALL Z,MOVE_EXPLODE_DOT_RIGHT_6 ;
                        CP 14                           ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;

                        CP 15                           ;
                        CALL Z,MOVE_EXPLODE_DOT_LEFT_6  ;
                        CP 15                           ;
                        CALL Z,MOVE_EXPLODE_DOT_DOWN_6  ;

; DIRECTION bits 0-up, 1-down, 2-left, 3-right
SKIP_MOVING_LEFTB_6:
                        LD A,(DIRECTION)                ;
                        BIT 2,A                         ;
                        JR Z,SKIP_MOVING_LEFT2B_6       ;
                        DEC (IX+1)                      ;
SKIP_MOVING_LEFT2B_6:
                        BIT 3,A                         ;
                        JR Z,SKIP_MOVING_RIGHT2B_6      ;
                        INC (IX+1)                      ;

SKIP_MOVING_RIGHT2B_6:
                        BIT 0,A                         ;
                        JR Z,SKIP_MOVING_UP2B_6         ;
                        DEC (IX+0)                      ;
SKIP_MOVING_UP2B_6:
                        BIT 1,A                         ;
                        JR Z,SKIP_MOVING_DONW2B_6       ;
                        INC (IX+0)                      ;

SKIP_MOVING_DONW2B_6:
                        INC IX                          ; Move to next data
                        INC IX                          ;

                        INC D                           ;

                        POP BC                          ;
                        DEC B                           ;

                        JP NZ,EXPLODELOOP2_1_6          ;
                        POP IX                          ; Restore alien pointer
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Update exploding dots data
MOVE_EXPLODE_DOT_UP_6:  PUSH AF                         ;
                        INC (IX+0)                      ;
                        POP AF                          ;
                        RET                             ;

MOVE_EXPLODE_DOT_RIGHT_6:
                        PUSH AF                         ;
                        DEC (IX+1)                      ;
                        POP AF                          ;
                        RET                             ;

MOVE_EXPLODE_DOT_DOWN_6:
                        PUSH AF                         ;
                        DEC (IX+0)                      ;
                        POP AF                          ;
                        RET                             ;

MOVE_EXPLODE_DOT_LEFT_6:
                        PUSH AF                         ;
                        INC (IX+1)                      ;
                        POP AF                          ;
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; PLOT Y co-ordinate to B, X to C

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Screen wipe
SCREEN_WIPE_6:

                        LD B,5                          ;
SCREEN_WIPE_LOOP_6:
                        LD HL,CHANGE_PATERN_6           ;

                        LD (HL),169                     ;

                        LD A,77                         ;
                        LD (PATERN_SETTING_6+1),A       ;
                        PUSH BC                         ;
                        CALL PATERN_6                   ;
                        POP BC                          ;
                        DJNZ SCREEN_WIPE_LOOP_6         ;


                        LD A,254                        ;
                        LD (PATERN_SETTING_6+1),A       ;
                        LD HL,CHANGE_PATERN_6           ;
                        LD (HL),161                     ;
                        CALL PATERN_6                   ;

                        RET                             ;
PATERN_6:
                        LD B,250                        ;

PATERN_SETTING_6:       LD C,40                         ; 240;254     ;
                        LD HL,16384                     ;
                        LD DE,29                        ;
H51490_6:
                        LD A,(HL)                       ; Get screen content into HL
CHANGE_PATERN_6:        AND C                           ;
                        LD (HL),A                       ;
                        LD DE,29                        ;
                        ADD HL,DE                       ;
                        LD A,H                          ;
                        CP 88                           ;
                        JR C,H51490_6                   ;
                        SUB 24                          ;
                        LD H,A                          ;
                        RRC C                           ;
                        DJNZ H51490_6                   ;
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
AMBIENCE_SOUND_6:
; Check if we need ambience sounds
                        LD A,(AMBIENCE_SOUND1_DURATION) ; Get Ambience sound counter
                        CP 0                            ;
                        JR NZ,SKIP_AMBIENCE_SOUND_ENABLE_6;
                         out (254),A

                        LD HL,AMBIENCE_COUNTER_6          ;
                        DEC (HL)                        ;
                        JR NZ,SKIP_AMBIENCE_SOUND_ENABLE_6;

                        LD A,R                          ;
                        CP 5                            ;
                        JR NZ,SKIP_AMBIENCE_SOUND_ENABLE_6;
                        ; CALL RESET_ALL_SOUNDS

                        LD A,R                          ;
                        OR 30                           ;

                        LD (CONTROLS_PITCH),A           ;


                        LD A,9                          ;
                        LD (AMBIENCE_SOUND1_DURATION),A ; Update Ambience sound counter

SKIP_AMBIENCE_SOUND_ENABLE_6:
                        LD A,(AMBIENCE_SOUND1_DURATION) ; Get Ambience sound counter
                        CP 60                           ;
                        JR NZ,SKIP_RESET_AMBIENCE_SOUND_6 ; No ambience sound if 20
                        XOR A                           ;
                        LD (AMBIENCE_SOUND1_DURATION),A ; Update Ambience sound counter
                        CALL RESET_ALL_SOUNDS           ;

                        JP SKIP_AMBIENCE_SOUND_6          ;

SKIP_RESET_AMBIENCE_SOUND_6:
                        OR A                            ;
                        JR Z,SKIP_AMBIENCE_SOUND_6        ;

                        INC A                           ;


                        LD (AMBIENCE_SOUND1_DURATION),A ; Update Ambience sound duration
                        ;   LD (CONTROLS_PITCH),A
                        LD HL,AMBIENCE_SOUND1           ;
                        CALL GENERAL_SOUND              ;
                        EI
                        HALT                            ;
                        HALT                            ;
                        HALT                            ;
                        HALT                            ;
                        HALT                            ;
                        HALT                            ;

SKIP_AMBIENCE_SOUND_6:
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
AMBIENCE_COUNTER_6:       DB 0                            ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Wait for Enter key or joystick fire
GET_KEY_DELAY_6:
KEYS12345C_6:

                        CALL AMBIENCE_SOUND_6             ;

                        LD BC,49150                     ; Read Fire key
                        IN A,(C)                        ; Check keys - When keys are pressed it resets the bits to zero
                        AND 31                          ; Keep only bits 0 to 4
                        CP 31                           ; Are any of these bits reset?
                        RET NZ                          ;
                        LD BC,65022                     ; Read Fire key
                        IN A,(C)                        ; Check keys - When keys are pressed it resets the bits to zero
                        AND 31                          ; Keep only bits 0 to 4
                        CP 31                           ; Are any of these bits reset?
                        RET NZ                          ; Jump if any of these keys are pressed


                        LD A,(KEMPSTON)                 ; Collect the Kempston joystick indicator
                        OR A                            ; Is the joystick connected?
                        JR Z,KEYS12345C_6               ; Jump if not
                        LD BC,31                        ; Collect input from the joystick
                        IN A,(C)                        ;
                        BIT 4,A                         ; Is the fire button being pressed?
                        JR Z,KEYS12345C_6               ; Jump if not
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TAKE_OFF_SOUND_6:
                        DI
                        EXX                             ;
                        LD A,(TAKEOFF_PITCH)            ; Get Takeoff pitch counter
                        CP 0                            ; Is it zero?
                        RET Z                           ; Return if so, No Takeoff sound if 0

                        DEC A                           ; Take 1 from pitch and duration

                        LD (TAKEOFF_PITCH),A            ; Update Takeoff sound pitch
                        LD (TAKEOFF_PITCH_NOISE),A      ;
                        AND 8                           ;
                        LD (TAKEOFF_SOUND_DURATION),A   ; Update Takeoff sound duration
                        LD HL,TAKEOFF_SOUND1            ;
                        CALL GENERAL_SOUND              ;
                        EXX                             ;
                        EI
                        HALT                            ;
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PERFORM_AMBIENCE_SOUND4_6:
                        CALL AMBIENCE_SOUND4_6          ;

                        HALT                            ;
                        HALT                            ;
                        HALT                            ;
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

AMBIENCE_SOUND4_6:
                        LD A,(AMBIENCE_SOUND4_SEQUENCE_COUNTER) ; Get sequence counter

                        LD HL,AMBIENCE_SOUND4_SEQUENCE_DATA ; Get sound sequence data
                        LD D,0                          ; Setup DE for addition pointer
                        LD E,A                          ;
                        ADD HL,DE                       ; Move HL to current sequence data
                        LD A,(HL)                       ; Get current sequence data
                        CP 255                          ; Is it 255?
                        JR NZ,SKIP_AMBIENCE_SOUND4_RESET ; If not then jump the sequence reset
                        XOR A                           ; A=0 for sequence reset
                        LD (AMBIENCE_SOUND4_SEQUENCE_COUNTER),A ; Update the sequence counter
                        RET                             ; Return
SKIP_AMBIENCE_SOUND4_RESET:

                        LD A,(HL)                       ; Get current sequence data
                        LD (AMBIENCE_SOUND4_PITCH),A    ; Setup note pitch
                        LD HL,AMBIENCE_SOUND4_DATA      ; Point at sound data
                        CP 0                            ;
                        CALL NZ,GENERAL_SOUND           ;

                        LD HL,AMBIENCE_SOUND4_SEQUENCE_COUNTER ; Get sequence counter
                        INC (HL)                        ;
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Disable all aliens
DISABLE_ALL_ALIENS_6:
                        LD IX,ALIEN_SHIP_1_ENABLED      ; Point at alien ship data
                        LD B,4                          ; 4 alien ships max
DISABLE_ALIEN_SHIPS_LOOP_6:;Loop for enabling alien ships ;
                        LD (IX+0),0                     ; Disable alien ship
                        LD DE,12+32                     ; Setup DE for addition
                        ADD IX,DE                       ; Move to next ship data block
                        DJNZ DISABLE_ALIEN_SHIPS_LOOP_6 ; Jump back for all ships to be disabled
                        RET                             ; Return

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Display snow SIDE SCROLLER
; draw over 0 snow from data 2 and update data 2
DRAW_STARS_DATA1_SIDE_SCROLLER_6:


                        LD HL,SNOW_FLAKE_DATA1_6        ;
                        LD B,10                         ;
SNOWLOOP2_1b:
                        PUSH BC                         ;

                        LD B,(HL)                       ;
                        INC HL                          ;
                        LD C,(HL)                       ;
                        ;  PUSH HL                         ;
                        CALL PLOT                       ;
                        ;  POP HL                          ;
                        LD BC,9                         ;
                        ADD HL,BC                       ;
                        POP BC                          ;
                        DJNZ SNOWLOOP2_1b               ;
                        RET                             ;

; PLOT Y co-ordinate to B, X to C
PLOT:
                        ;     PUSH BC
                        ;     PUSH HL


; Pixel address to HL.
PIXEL:
                        LD A,116                        ; Test that the y co-ordinate (in SUB B B) is not greater than 175.
                        SUB B                           ;
                        RET C                           ; Return if over 175
                        PUSH HL                         ;
                        LD B,A                          ; B now contains 175 minus y.
                        AND A                           ; A holds b7b6b5b4b3b2b1b0,
                        RRA                             ; The bite of B. And now 0b7b6b5b4b3b2b1.
                        SCF                             ;
                        RRA                             ; Now 10b7b6b5b4b3b2.
                        AND A                           ;
                        RRA                             ; Now 010b7b6b5b4b3.
                        XOR B                           ;
                        AND 248                         ; Finally 010b7b6b2b1b0, so that
                        XOR B                           ; H becomes 64 + 8*INT (B/64) +
                        OR 96                           ;
                        LD H,A                          ; B (mod 8), the high byte of the
                        LD A,C                          ; pixel address. C contains X.
                        RLCA                            ; A starts as c7c6c5c4c3c2c1c0.
                        RLCA                            ;
                        RLCA                            ; And is now c2c1c0c7c6c5c4c3.
                        XOR B                           ;
                        AND 199                         ;
                        XOR B                           ; Now c2c1b5b4b3c5c4c3.
                        RLCA                            ;
                        RLCA                            ; Finally b5b4b3c7c6c5c4c3, so
                        LD L,A                          ; that L becomes 32*INT (B(mod
                        LD A,C                          ; 64)/8) + INT(x/8), the low byte.
                        AND 7                           ; A holds x(mod 8): so the pixel
                        ; is bit (A - 7) within the byte.
                        LD B,A                          ; B will count A+1 loops to get a
                        INC B                           ; Zero to the correct place in A.
                        LD A,1                          ; The zero is entered.
PLOTLOOP:
                        RRCA                            ; Then lined up with the pixel
                        DJNZ PLOTLOOP                   ; Bit position in the byte.
                        LD B,A                          ; Then copied to B.
                        LD A,(HL)                       ; The pixel-byte is obtained in A.

                        XOR B                           ; Over 1

PLOTEND:
                        ; OR (HL)                         ; Merge with what is already on screen
                        LD (HL),A                       ; The byte is entered. Its other bits are unchanged in every case.
                        POP HL                          ;
                        ;    POP BC
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; x up/down,  y left/right,  DOWN speed,  LEFT/RIGHT SPEED ADDITION,  0 FOR LEFT 1 FOR RIGHT
;    0              1             2                 3                         4

; Update random stars for side scroller ROUTINE
UPDATE_DATA_1_SIDE_SCROLLER_6:
                        LD IX,SNOW_FLAKE_DATA1_6        ;
                        LD B,25                         ;
SNOWLOOP3_2B:
                        PUSH BC                         ; Save loop

                        LD A,(PLANET_SIDE_SCROLLER_TAKEOFF_COUNTER); Get planet confrontation takeoff counter
                        CP 0                            ; Is it 0?
                        JR Z,SKIP_SCROLLING_DOWN_STARS  ; If so then skip moving stars down
                        DEC (IX+0)                      ; Move stars down

SKIP_SCROLLING_DOWN_STARS:

                        LD A,(IX+3)                     ; Left/Right speed addition
                        LD D,A                          ;
                        LD A,(IX+1)                     ; Get left/right coordinate
                        SUB D                           ; Left/right speed subtraction

                        LD D,A                          ; Save current total into D


                        LD A,(SPEED)                    ; Get speed 0 to 5
                        LD B,A                          ; Save to B


                        LD A,5                          ; 5-B=speed
                        SUB B                           ;
                        LD C,A                          ; Save speed to C

                        LD A,D                          ; Restore total before speed
                        SUB C                           ; Add speed


                        LD(IX+1),A                      ; Update left/right coordinate
                        LD BC,5                         ; On to next snow flake
                        ADD IX,BC                       ;
                        POP BC                          ; Restore loop

                        DJNZ SNOWLOOP3_2B               ; Jump back until all snow is updated
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; x up/down,  y left/right,  UP/DOWN SPEED,  LEFT/RIGHT SPEED,   0 LEFT, 1 RIGHT      0 UP, 1 DOWN     Colour   x up/down RESET,  y left/right RESET    Star speed counter
;    0              1             2                 3                  4                  5             6             7                 8                   9
; Update new star locations
; Update data 2
UPDATE_DATA_6:
                        LD HL,DIRECTION                 ;
                        LD IX,SNOW_FLAKE_DATA1_6        ; Point at star data

                        LD A,(SERVICES_ON)              ; Get Services on/off status
                        OR A                            ; Services off?
                        JR Z,SKIP_JUMPING_OVER_STAR_DATAB;
                        LD B,9                          ; 9 star data
                        JP SNOWLOOP3_2                  ;

SKIP_JUMPING_OVER_STAR_DATAB:

                        LD B,35                         ; 35 star data
SNOWLOOP3_2:
                        PUSH BC                         ; Save loop

                        ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Speed up star
                        INC (IX+9)                      ; 23 Get Star speed counter
                        LD B,(IX+9)                     ; 19

                        RR B                            ;

                        ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Check Left/right
                        LD A,(IX+3)                     ; Left/Right speed addition
                        LD D,A                          ; Save Left/Right speed into D
                        CP 255                          ;        ; Is star moving right
                        JR Z,STAR_NOT_MOVING_LEFT_RIGHT ; Star not moving

; 0 LEFT, 1 RIGHT
                        LD A,(IX+4)                     ; Get left/right status
                        OR A                            ; CP 0 Is star moving left
                        JR NZ,STAR_MOVING_LEFT_SKIP     ; Star moving right
                        ; Star is moving left
                        LD A,(IX+1)                     ; Get left/right coordinate
; Move left stars left
                        SUB D                           ; Left/right speed addition
                        SUB B                           ;
                        LD (IX+1),A                     ; UPDATE left/right coordinate
                        JP STAR_NOT_MOVING_LEFT_RIGHT   ;

STAR_MOVING_LEFT_SKIP:
; Star is moving right
                        LD A,(IX+1)                     ; Get left/right coordinate
                        ADD A,D                         ; Left/right speed subtraction
                        ADD A,B                         ;
                        LD (IX+1),A                     ; Update left/right coordinate

STAR_NOT_MOVING_LEFT_RIGHT:

                        LD (TEMP_MOVE_STORE),A          ;
                        LD C,A                          ; Keep temp move store
                        LD A,(HL)                       ; Get direction
                        JR Z,UPDATE_LEFT_RIGHT          ; No direction left/right is being pressed so skip ship left/right movement
; DIRECTION bits 0-up, 1-down, 2-left, 3-right

                        BIT 2,A                         ;
                        JR Z,SKIP_SHIP_MOVING_LEFT      ;

                        LD A,C                          ; (TEMP_MOVE_STORE)          ; Changed 6/7/2019
                        SUB 8                           ;
                        LD(IX+1),A                      ; Update left/right coordinate
                        JP UPDATE_LEFT_RIGHT            ;

SKIP_SHIP_MOVING_LEFT:

                        BIT 3,A                         ;
                        JR Z,UPDATE_LEFT_RIGHT          ;

                        LD A,C                          ; (TEMP_MOVE_STORE)          ; Changed 6/7/2019
                        ADD A,8                         ;
                        LD(IX+1),A                      ; Update left/right coordinate



UPDATE_LEFT_RIGHT:

; ;;;;;;;;

; x up/down,  y left/right,  UP/DOWN SPEED,  LEFT/RIGHT SPEED,   0 LEFT, 1 RIGHT      0 UP, 1 DOWN     Colour   x up/down RESET,  y left/right RESET    Star speed counter
;    0              1             2                 3                  4                  5             6             7                 8                   9
                        ; Check Up/down
                        LD A,(IX+2)                     ; UP/DOWN speed addition
                        LD D,A                          ; Save Left/Right speed into D
                        OR A                            ; CP 0                            ; Is star moving
                        JR Z,STAR_NOT_MOVING_UP_DOWN    ; Star not moving



                        LD A,(IX+5)                     ; Get UP/DOWN status
                        OR A                            ; Is star moving down
                        JR NZ,STAR_MOVING_UP_SKIP       ; Star moving down


                        LD A,(IX+0)                     ; Get up/down coordinate
                        ADD A,D                         ; Left/right speed subtraction
                        ADD A,B                         ;
                        LD (IX+0),A                     ; UPDATE up/down coordinate
                        JR STAR_NOT_MOVING_UP_DOWN      ;

STAR_MOVING_UP_SKIP:
                        LD A,(IX+0)                     ; Get up/down coordinate
                        SUB D                           ; Left/right speed addition
                        SUB B                           ;
                        LD (IX+0),A                     ; UPDATE up/down coordinate


; ;;;;;;;;;;;;;;;;;
STAR_NOT_MOVING_UP_DOWN:

                        LD (TEMP_MOVE_STORE),A          ;
                        LD C,A                          ; Save Temp move store
                        LD A,(HL)                       ; Get direction
                        JR Z,UPDATE_MOVING_UP_DOWN      ; No direction left/right is being pressed so skip ship left/right movement
; DIRECTION bits 0-up, 1-down, 2-left, 3-right

                        BIT 0,A                         ;
                        JR Z,SKIP_SHIP_MOVING_DOWN      ;

                        LD A,C                          ; (TEMP_MOVE_STORE)          ; Changed 6/7/2019
                        SUB 8                           ;
                        LD (TEMP_MOVE_STORE),A          ;
                        JR UPDATE_MOVING_UP_DOWN        ;

SKIP_SHIP_MOVING_DOWN:

                        ; LD A,(HL)                ;Get direction
                        BIT 1,A                         ;
                        JR Z,UPDATE_MOVING_UP_DOWN      ;

                        LD A,C                          ; (TEMP_MOVE_STORE)          ; Changed 6/7/2019
                        ADD A,8                         ;
                        LD (TEMP_MOVE_STORE),A          ;

; ;;;;;;;;;;;



UPDATE_MOVING_UP_DOWN:
                        LD A,(TEMP_MOVE_STORE)          ;
                        LD(IX+0),A                      ; Update up/down coordinate

; x up/down,  y left/right,  UP/DOWN SPEED,  LEFT/RIGHT SPEED,   0 LEFT, 1 RIGHT      0 UP, 1 DOWN     Colour   x up/down RESET,  y left/right RESET    Star speed counter
;    0              1             2                 3                  4                  5             6             7                 8                   9


                        ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Reset star?

                        LD C,(IX+0)                     ; Changed 6/7/2019
                        CP 120                          ;
                        JR C,SKIP_RESETTING_UP_DOWN     ;

                        LD A,(IX+7)                     ;

                        LD (IX+0),A                     ;


                        LD A,(IX+8)                     ;

                        LD (IX+1),A                     ;
                        LD (IX+9),0                     ;

SKIP_RESETTING_UP_DOWN:

                        LD A,C                          ; (IX+0)                     ;  Changed 6/7/2019
                        CP 1                            ;
                        JR NC,SKIP_RESETTING_UP_DOWN2   ;
                        LD A,(IX+7)                     ;

                        LD (IX+0),A                     ;
                        LD (IX+7),A                     ;

                        LD A,(IX+8)                     ;

                        LD (IX+1),A                     ;
                        LD (IX+9),0                     ;
SKIP_RESETTING_UP_DOWN2:

                        LD C,(IX+1)                     ;  Changed 6/7/2019
                        CP 250                          ;
                        JR C,SKIP_RESETTING_LEFT_RIGHT  ;
                        LD A,(IX+8)                     ;

                        LD (IX+1),A                     ;
                        LD (IX+8),A                     ;

                        LD A,(IX+7)                     ;

                        LD (IX+0),A                     ;
                        LD (IX+9),0                     ;

SKIP_RESETTING_LEFT_RIGHT:
                        LD A,C                          ; (IX+1)                     ;  Changed 6/7/2019
                        CP 1                            ;
                        JR NC,SKIP_RESETTING_LEFT_RIGHT2;
                        LD A,(IX+8)                     ;
                        LD (IX+1),A                     ;

                        LD A,(IX+7)                     ;
                        LD (IX+0),A                     ;
                        LD (IX+9),0                     ;

SKIP_RESETTING_LEFT_RIGHT2:
                        LD BC,10                        ; On to next snow flake
                        ADD IX,BC                       ; Add 10 to star data pointer to get star speed counter

                        LD A,(SERVICES_ON)              ; Get Services on/off status
                        OR A                            ; Services off?
                        JR Z,SKIP_JUMPING_OVER_STAR_DATAC;
                        ADD IX,BC                       ; Add 10 to star data pointer to get star speed counter
                        ADD IX,BC                       ; Add 10 to star data pointer to get star speed counter

SKIP_JUMPING_OVER_STAR_DATAC:
                        POP BC                          ; Restore loop
                        DEC B                           ;
                        JP NZ,SNOWLOOP3_2               ; Jump back until all snow is updated
                        RET                             ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Setup the logo data into memory for manipulation
COPY_LOGO_DATA_TO_TEMP_6:
                        LD HL,LOGO_COORDINATES_DATA_6   ; HL=LOGO DATA
                        LD DE,LOGO_COORDINATES_DATA_TEMP_6 ; DE=LOGO DATA TEMP
                        LD BC,1796                      ;
                        LDIR                            ; Move the default logo data to temp for manipulation
                        RET                             ;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Setup random stars for side scroller
SETUP_STARS_SIDE_SCROLLER_6:
                        LD IX,SNOW_FLAKE_DATA1_6        ;

                        LD B,25                         ;
SNOWLOOP1B_6:
                        PUSH BC                         ;
                        CALL RND                        ; Random across
                        INC A                           ;
                        INC A                           ;
                        INC A                           ;
                        LD (IX+1),A                     ; Setup across
                        CALL RND                        ;
                        AND %01111111                   ; UP/DOWN
                        LD (IX+0),A                     ;
                        CALL RND                        ; Setup speed down
                        AND %00000001                   ;
                        OR A                            ; CP 0                            ;
                        CALL Z,SET_TO_1B_6                ;
                        LD (IX+2),A                     ;
                        CALL RND                        ; Random left/right
                        AND %00000001                   ; Keep first bit only

                        LD (IX+4),A                     ; Set left right
                        CALL RND                        ; Random left/right speed
                        AND %00000111                   ; Keep first 2 bit only
                        OR A                            ; CP 0                            ;
                        CALL Z,SET_TO_1B_6                ;
                        LD (IX+3),A                     ; Set left right speed
                        LD BC,5                         ;
                        ADD IX,BC                       ;
                        POP BC                          ;

                        DJNZ SNOWLOOP1B_6                 ;
                        RET                             ;
SET_TO_1B_6:
                        LD A,2                          ;
                        RET                             ;



; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Store star data for movement
SNOW_FLAKE_DATA1_6:     DEFS 300                        ;

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

StringEnd6:
        if *> 62500                                     ;
                        zeuserror "out of room"         ;
        endif                                           ;

Addre6:                  equ *-1
AppLast:                 equ *-1                         ; The last used byte's address



